{"version":3,"sources":["types/transactionTypes.ts","components/Buttons.tsx","components/Icons.tsx","actions/sourceTargetActions.ts","components/theme.ts","components/LayoutBoxes.tsx","components/MenuAction.tsx","types/sourceTargetTypes.ts","reducers/sourceTargetReducer.ts","contexts/SourceTargetContextProvider.tsx","util/logger.ts","hooks/useBlocksInfo.ts","util/getSubstrateDynamicNames.ts","hooks/useBridgedBlocks.ts","hooks/useMessagesLane.ts","hooks/useLaneId.ts","hooks/useDashboard.ts","hooks/useDashboardProfile.ts","components/Network.tsx","components/TransactionDisplay.tsx","util/envVariablesValidations.ts","util/createPolkadotJsUrl.ts","configs/substrateCustomTypes/index.ts","actions/accountActions.ts","configs/substrateProviders.ts","reducers/accountReducer.ts","contexts/AccountContextProvider.tsx","actions/messageActions.ts","reducers/messageReducer.ts","contexts/MessageContext.tsx","types/keyringTypes.ts","contexts/KeyringContextProvider.tsx","actions/transactionActions.ts","reducers/transactionReducer.ts","contexts/TransactionContext.tsx","hooks/useApiConnection.ts","hooks/useLoadingApi.ts","hooks/useTransactionPreparation.ts","hooks/useTransactionType.ts","hooks/useSendMessage.ts","components/CustomCall.tsx","components/DashboardCard.tsx","components/ExtensionAccountCheck.tsx","components/Remark.tsx","util/getDeriveAccount.ts","hooks/useDerivedAccount.ts","util/getSS58.ts","hooks/useAccounts.ts","constants.ts","util/getReceiverAddress.ts","hooks/useReceiver.ts","hooks/useApiBalance.ts","hooks/useBalance.ts","components/Balance.tsx","util/shortenItem.ts","components/AccountIdenticon.tsx","components/AccountDisplay.tsx","components/Account.tsx","components/SubHeader.tsx","components/Sender.tsx","util/formatAccounts.ts","components/SnackBar.tsx","components/TransactionStatus.tsx","components/Transactions.tsx","components/ReceiverInput.tsx","hooks/usePrevious.ts","components/GenericAccount.tsx","components/ReceiverDerivedAccount.tsx","components/Receiver.tsx","components/Transfer.tsx","screens/Main.tsx","App.tsx","index.tsx"],"names":["TransactionStatusEnum","TransactionTypes","useStyles","makeStyles","theme","contact","backgroundColor","palette","secondary","light","switchMode","fontSize","typography","body2","ButtonExt","children","startIcon","variant","disableElevation","href","props","classes","Button","className","onClick","url","newWindow","window","open","opener","openInNewTab","ButtonSwitchMode","color","SourceTargetActionsTypes","IconTxStatus","status","COMPLETED","IN_PROGRESS","FAILED","bridgesBlue","substrateGray","paletteLight","type","common","black","white","background","paper","default","primary","main","dark","contrastText","error","red","text","disabled","hint","action","active","divider","grey","allVariants","fontFamily","h1","fontWeight","lineHeight","letterSpacing","h2","h3","h4","body1","button","textTransform","subtitle1","subtitle2","overline","shadows","ui","display","justifyContent","padding","spacing","paddingLeft","maxWidth","borderRadius","sidebar","position","flexDirection","top","width","height","borderRight","fade","BoxUI","Container","Paper","elevation","BoxSidebar","Box","menu","item","margin","paddingRight","pointerEvents","MenuAction","items","changeMenu","menuIdx","React","useState","anchorEl","setAnchorEl","undefined","id","setId","setOpen","useEffect","Boolean","ButtonBase","event","currentTarget","title","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","map","i","n","isEnabled","idx","ChainDetails","SourceTargetActionsCreators","chain","payload","SWAP_CHAINS","sourceTargetReducer","state","SOURCE","sourceChain","sourceApiConnection","TARGET","targetApiConnection","targetChain","sourcePolkadotjsUrl","targetPolkadotjsUrl","Error","SourceTargetContext","createContext","useSourceTarget","useContext","UpdateSourceTargetContext","SourceTargetContextProvider","connections","initialState","apiConnection","chainName","polkadotjsUrl","initState","useReducer","sourceTargetChains","dispatchChangeSourceTarget","Provider","value","winston","addColors","debug","info","warn","myformat","format","cli","all","logger","createLogger","transports","Console","useBlocksInfo","isApiReady","api","bestBlock","setBestBlock","bestBlockFinalized","setBestBlockFinalized","derive","bestNumber","res","toString","then","unsub","unsubscribeBestNumber","catch","e","bestNumberFinalized","unsubscribeBestNumberFinalized","getSubstrateDynamicNames","key","bridgedGrandpaChain","bridgedMessages","estimatedFeeMethodName","latestReceivedNonceMethodName","storageKey","useBridgedBlocks","bestBridgedFinalizedBlock","setBestBridgedFinalizedBlock","unsubBestFinalized","unsubImportedHeaders","query","bestFinalized","importedHeaders","toJSON","number","useMessageLane","latestReceivedNonce","pendingMessages","totalMessages","outboundLanes","setOutboudLanes","bridgeReceivedMessages","inboundLanes","setInboudLanes","laneId","process","unsubscribeOutboundLanes","unsubscribeInboundLanes","latest_generated_nonce","get","latest_received_nonce","BN","sub","isNeg","useDashboard","ChainDetail","chainDetail","sourceChainDetails","targetChainDetails","isSourceApiReady","sourceApi","isTargetApiReady","targetApi","destination","local","profile","setProfile","useDashboardProfile","blockInfo","bridgedBlocks","messagesLane","useMessagesLane","border","bottom","right","transform","transition","opacity","statsEntry","alignItems","NetworkSides","marginY","p","Divider","IconButton","size","NetworkStats","dbSource","card","marginBottom","marginRight","TransactionDisplay","transaction","steps","length","Card","component","chainType","label","onChain","pt","pb","pl","pr","Typography","expectedVariables","checkEnvVariable","variable","envVariable","createPolkadotJsUrl","types","providerUrl","jsonU8a","stringToU8a","JSON","stringify","compressed","zlibSync","level","encoded","base64Encode","encodeURIComponent","hasherH512","data","u8aConcat","blake2AsU8a","keccakAsU8a","AccountActionsTypes","getChainNames","CHAIN_1","CHAIN_2","getTypeAndHasher","chainNumber","hasher","customTypesMillau","customTypesRialto","getConnectionChainInformation","createConfigObject","SS58Format","parseInt","bridgeId","getChainConfigs","chain1","chain2","createProviderObject","provider","WsProvider","AccountActionCreators","account","SET_ACCOUNT","accountReducer","AccountContext","UpdateAccountContext","useAccountContext","AccountContextProvider","dispatchAccount","MessageActionsTypes","MessageActionsCreators","CLEAR_MESSAGE","message","TRIGGER_MESSAGE","messageReducer","KeyringStatuses","MessageContext","UpdateMessageContext","useUpdateMessageContext","MessageContextProvider","dispatchMessage","TransactionActionTypes","KeyringContext","useKeyringContext","KeyringContextProvider","INIT","keyringStatus","setKeyringStatus","keyringPairs","setKeyringPairs","keyringPairsReady","setkeyringPairsReady","extensionExists","setExtensionExists","accountExists","setAccountExists","isDevelopment","loadAccounts","useCallback","asyncLoadAccounts","a","LOADING","web3Enable","web3Accounts","allAccounts","address","meta","name","keyring","loadAll","READY","ERROR","keyringOptions","getPairs","TransactionActionCreators","initialTransaction","CREATE_TRANSACTION_STATUS","estimatedFee","SET_ESTIMATED_FEE","receiverAddress","SET_RECEIVER_ADDRESS","unformattedReceiverAddress","SET_UNFORMATTED_RECEIVER_ADDRESS","updatedValues","UPDATE_CURRENT_TRANSACTION_STATUS","genericReceiverAccount","SET_GENERIC_RECEIVER_ACCOUNT","derivedReceiverAccount","SET_DERIVED_RECEIVER_ACCOUNT","transactionReducer","newState","transactions","unshift","createTransaction","stateTransaction","updateTransaction","TransactionContext","UpdateTransactionContext","useTransactionContext","useUpdateTransactionContext","TransactionContextProvider","dispatchTransaction","registry","TypeRegistry","useApiConnection","apiPromise","setApiPromise","isReady","setIsReady","ApiPromise","create","err","register","useLoadingApi","areReady","setAreReady","useTransactionPreparation","input","weightInput","isValidCall","areApiReady","setPayload","call","weight","values","setValues","REMARK","TRANSFER","CUSTOM","tx","system","remark","paymentInfo","apiCall","toHex","toU8a","slice","toNumber","balances","transfer","isHex","hexToU8a","getValues","useTransactionType","payloadType","createType","messageFeeType","lane_id","rpc","estimatedFeeCall","estimatedFeeType","calculateFee","compactAddLength","origin","SourceAccount","addressRaw","spec_version","useSendMessage","isRunning","setIsRunning","sendLaneMessage","moment","makeCall","bridgeMessage","sendMessage","options","nonce","sourceAccount","isInjected","web3FromSource","source","injector","signer","signAndSend","events","block","blockHash","messageNonce","CREATED","isBroadcast","isInBlock","forEach","method","toArray","getBlock","asInBlock","header","isFinalized","asFinalized","isButtonDisabled","styled","decoded","setDecoded","customCallInput","setCustomCallInput","setWeightInput","setError","TextField","onChange","decodePayload","target","Message","Header","headerText","rel","CardContent","Alert","ExtensionAccountCheck","msg","severity","remarkInput","setRemarkInput","getDeriveAccount","decodeAddress","encodeAddress","blake2AsHex","Uint8Array","from","useDerivedAccount","chainsConfigs","getChainSS58","useAccounts","accounts","setAccounts","derivedAccount","setCurrentAccount","ss58Format","find","INCORRECT_FORMAT","GENERIC","getReceiverAddress","checkAddress","validatedDerivedAcccount","rest","formatFound","prefix","split","intPrefix","Object","keys","getFormat","useReceiver","setReceiver","setUnformattedReceiver","validateAccount","receiver","formattedAccount","useApiBalance","isDerived","ZERO","initValues","chainTokens","formattedBalance","free","useBalance","providedSi","setState","unsubscribe","formatBalance","decimals","chainDecimals","withUnit","forceUnit","withSi","u","Promise","resolve","reject","getBalance","Balance","balance","substring","placeholder","filter","AccountIdenticon","ctx","onlyBalance","icon","float","container","minWidth","marginLeft","AccountDisplay","addressKind","friendlyName","hideAddress","shortAddress","shorterItem","displayName","displayText","Account","accountName","createStyles","root","SubHeader","Star","row","chains","setChains","renderAccounts","formatedAddress","toLocaleUpperCase","formatAccounts","MenuItem","getName","AccountSelected","InputLabel","FormControl","Select","renderValue","CloseButton","SnackBar","useSnackbar","enqueueSnackbar","closeSnackbar","TransactionStatus","onComplete","nonceOfTargetFinalizedBlock","setNonceOfTargetFinalizedBlock","latestReceivedNonceRuntimeApi","setLatestReceivedNonceRuntimeApi","setSteps","areApiLoading","latestReceivedNonceOnSource","bestBridgedFinalizedBlockOnTarget","bestBlockFinalizedOnTarget","completed","getNonceByHash","getBlockHash","latestReceivedNonceCall","latestReceivedNonceCallType","getLatestReceivedNonce","stepEvaluator","transactionValue","chainValue","bnChainValue","bnTransactionValue","gt","completionStatus","sourceTransactionFinalized","blockFinalityRelayed","messageDelivered","messageFinalizedOnTarget","sourceConfirmationReceived","Transactions","shortenItem","ReceiverInput","setFormatFound","showBalance","setShowBalance","prevTargetChain","ref","useRef","current","usePrevious","reset","addressInput","InputBase","fullWidth","native","borderTop","companion","NATIVE","DERIVED","GenericAccount","selected","setSelected","targetSS58Format","nativeAddress","nativeState","derivedAddress","derivedState","shortGenericAddress","derived","minHeight","ReceiverDerivedAccount","shortUnformattedReceiver","Receiver","Transfer","transferInput","setTransferInput","MenuContents","Main","choice","setItems","index","setIndex","Grid","md","x","providers","getChainProviders","App","apiChain1","apiChain2","path","ThemeProvider","createMuiTheme","Backdrop","CircularProgress","v","checkExpectedVariables","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54366382.chunk.js","sourcesContent":["// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionTypes } from '../actions/transactionActions';\n\nexport interface TransactionContextType {\n  estimatedFee: string | null;\n  receiverAddress: string | null;\n  unformattedReceiverAddress: string | null;\n  transactions: Array<TransanctionStatus>;\n  derivedReceiverAccount: string | null;\n  genericReceiverAccount: string | null;\n}\n\nexport interface Payload {\n  [propName: string]: any;\n}\n\nexport interface UpdatedTransanctionStatus {\n  [propName: string]: any;\n}\n\nexport enum TransactionStatusEnum {\n  CREATED = 'CREATED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED'\n}\n\nexport interface TransanctionStatus extends UpdatedTransanctionStatus {\n  input: string;\n  sourceChain: string;\n  targetChain: string;\n  sourceAccount: null | string;\n  receiverAddress: null | string;\n  type: string;\n  status: TransactionStatusEnum;\n}\nexport interface TransactionState {\n  estimatedFee: string | null;\n  receiverAddress: string | null;\n  unformattedReceiverAddress: string | null;\n  derivedReceiverAccount: string | null;\n  genericReceiverAccount: string | null;\n  transactions: Array<TransanctionStatus>;\n}\n\nexport type TransactionsActionType = { type: TransactionActionTypes; payload: Payload };\n\nexport enum TransactionTypes {\n  CUSTOM = 'CUSTOM',\n  TRANSFER = 'TRANSFER',\n  REMARK = 'REMARK'\n}\n\nexport interface Step {\n  chainType: string;\n  label: string;\n  onChain?: string;\n  status: keyof typeof TransactionStatusEnum;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button, ButtonProps } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  contact: {\n    backgroundColor: 'transparent',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light\n    }\n  },\n  switchMode: {\n    fontSize: theme.typography.body2.fontSize\n  }\n}));\n\nexport const ButtonExt = ({\n  children,\n  startIcon = <ForumIcon />,\n  variant = 'contained',\n  disableElevation = true,\n  href = 'https://github.com/paritytech/parity-bridges-ui/issues',\n  ...props\n}: ButtonProps) => {\n  const classes = useStyles();\n  const openInNewTab = (url: string): void => {\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n    if (newWindow) newWindow.opener = null;\n  };\n  return (\n    <Button\n      className={classes.contact}\n      variant={variant}\n      startIcon={startIcon}\n      disableElevation={disableElevation}\n      onClick={() => openInNewTab(href)}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const ButtonSwitchMode = ({ children, color = 'secondary', ...props }: ButtonProps) => {\n  const classes = useStyles();\n  return (\n    <Button className={classes.switchMode} color={color} {...props}>\n      {children}\n    </Button>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport React from 'react';\n\nimport { TransactionStatusEnum } from '../types/transactionTypes';\n\ninterface IconTxStatusProps {\n  status: keyof typeof TransactionStatusEnum;\n}\nexport const IconTxStatus = ({ status }: IconTxStatusProps) => {\n  if (status === TransactionStatusEnum.COMPLETED) {\n    return <CheckCircleOutlineIcon />;\n  } else if (status === TransactionStatusEnum.IN_PROGRESS) {\n    return <AutorenewIcon />;\n  } else if (status === TransactionStatusEnum.FAILED) {\n    return <ErrorOutlineIcon />;\n  }\n  return <FiberManualRecordIcon />;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nenum SourceTargetActionsTypes {\n  SWAP_CHAINS = 'SWAP_CHAINS'\n}\n\nconst switchChains = (chain: string) => ({\n  payload: { chain },\n  type: SourceTargetActionsTypes.SWAP_CHAINS\n});\n\nconst SourceTargetActionsCreators = {\n  switchChains\n};\n\nexport { SourceTargetActionsTypes, SourceTargetActionsCreators };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport { ThemeOptions } from '@material-ui/core/styles';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\nimport { Shadows } from '@material-ui/core/styles/shadows';\n\nexport const bridgesBlue = {\n  100: '#2E99E5',\n  300: '#2E99E5',\n  400: '#2E99E5',\n  500: '#2E99E5'\n};\nexport const substrateGray = {\n  50: '#FCFCFC',\n  100: '#F1F5F7',\n  150: '#F0F2F5',\n  200: '#EAEEF1',\n  400: '#C6D0D7',\n  500: '#ABB8BF',\n  700: '#556068',\n  600: '#7E8D95',\n  800: '#323F47',\n  900: '#202B33'\n};\n\nconst paletteLight: PaletteOptions = {\n  type: 'light',\n  common: {\n    black: 'black',\n    white: '#FFFFFF'\n  },\n  background: {\n    paper: '#FFFFFF',\n    default: '#FFFFFF'\n  },\n  primary: {\n    light: bridgesBlue[100],\n    main: bridgesBlue[400],\n    dark: bridgesBlue[500],\n    contrastText: 'white'\n  },\n  secondary: {\n    light: substrateGray[100],\n    main: substrateGray[400],\n    dark: substrateGray[500],\n    contrastText: 'black'\n  },\n  error: {\n    light: red[100],\n    main: '#FF3014',\n    dark: red[500],\n    contrastText: 'black'\n  },\n  text: {\n    primary: substrateGray[900],\n    secondary: bridgesBlue[400],\n    disabled: substrateGray[400],\n    hint: substrateGray[700]\n  },\n  action: {\n    active: bridgesBlue[300]\n  },\n  divider: grey[300]\n};\n\nconst shadows: Shadows = [\n  'none',\n  '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\n  '0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\n  '0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)',\n  '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n  '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)',\n  '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n  '0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)',\n  '0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)',\n  '0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)',\n  '0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)',\n  '0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)',\n  '0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)',\n  '0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)',\n  '0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)',\n  '0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)',\n  '0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)',\n  '0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)',\n  '0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)',\n  '0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)',\n  '0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)',\n  '0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)',\n  '0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)',\n  '0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)',\n  '0px 100px 80px rgba(0, 0, 0, 0.07), 0px 40px 32px rgba(0, 0, 0, 0.05), 0px 20px 20px rgba(0, 0, 0, 0.04), 0px 12px 12px rgba(0, 0, 0, 0.04), 0px 6px 6px rgba(0, 0, 0, 0.03), 0px 3px 2px rgba(0, 0, 0, 0.02)'\n];\n\nexport const light: ThemeOptions = {\n  typography: {\n    allVariants: {\n      color: paletteLight.text && paletteLight.text.primary\n    },\n    fontFamily:\n      'Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, Segoe UI, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Web3-Regular\"',\n    h1: {\n      fontWeight: 500,\n      fontSize: 30,\n      lineHeight: '115%',\n      letterSpacing: '-0.02em'\n    },\n    h2: {\n      fontWeight: 600,\n      fontSize: 21,\n      lineHeight: '120%'\n    },\n    h3: {\n      fontWeight: 600,\n      fontSize: 18,\n      lineHeight: '120%'\n    },\n    h4: {\n      fontWeight: 500,\n      fontSize: 14,\n      lineHeight: '120%',\n      color: grey[800]\n    },\n    body1: {\n      fontWeight: 400,\n      fontSize: 14,\n      lineHeight: '140%',\n      color: grey[800]\n    },\n    body2: {\n      fontWeight: 400,\n      fontSize: 12,\n      lineHeight: '140%'\n    },\n    button: {\n      fontWeight: 500,\n      fontSize: 16,\n      lineHeight: '140%',\n      letterSpacing: 0.2,\n      textTransform: 'none'\n    },\n    subtitle1: {\n      fontFamily: 'SFMono-Regular, Consolas , Liberation Mono, Menlo, monospace',\n      fontWeight: 400,\n      fontSize: 20,\n      lineHeight: '120%'\n    },\n    subtitle2: {\n      fontFamily: 'SFMono-Regular, Consolas , Liberation Mono, Menlo, monospace',\n      fontWeight: 400,\n      fontSize: 11,\n      lineHeight: '135%',\n      color: grey[700],\n      letterSpacing: 0.1\n    },\n    overline: {\n      fontSize: 11,\n      lineHeight: '120%',\n      letterSpacing: 0.7\n    }\n  },\n  palette: paletteLight,\n  shadows: shadows\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Container, Paper } from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport { substrateGray } from './theme';\n\n// As this is placed as a child in the Material UI Select component, for some reason style components classes are not working.\n// This way to inject the styles works.\nconst useStyles = makeStyles((theme) => ({\n  ui: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: theme.spacing(3),\n    paddingLeft: 240 + theme.spacing(3),\n    '& .MuiPaper-root': {\n      maxWidth: '100%',\n      padding: theme.spacing(2),\n      borderRadius: theme.spacing(1.5)\n    }\n  },\n  sidebar: {\n    position: 'fixed',\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    top: 0,\n    width: 240,\n    padding: theme.spacing(3),\n    height: '100vh',\n    backgroundColor: substrateGray[50],\n    borderRight: `1px solid ${fade(theme.palette.divider, 0.5)}`\n  }\n}));\n\ninterface BoxUIProps {\n  children: React.ReactElement[] | React.ReactElement | string;\n}\n\nexport const BoxUI = ({ children }: BoxUIProps) => {\n  const classes = useStyles();\n  return (\n    <Container className={classes.ui}>\n      <Paper elevation={24}>{children}</Paper>\n    </Container>\n  );\n};\n\nexport const BoxSidebar = ({ children }: BoxUIProps) => {\n  const classes = useStyles();\n  return <Box className={classes.sidebar}>{children}</Box>;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ButtonBase, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport React, { Dispatch, SetStateAction, useEffect } from 'react';\n\n// As this is placed as a child in the Material UI Select component, for some reason style components classes are not working.\n// This way to inject the styles works.\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    display: 'inline-block',\n    background: theme.palette.secondary.light,\n    padding: theme.spacing(),\n    borderRadius: theme.spacing()\n  },\n  item: {\n    ...theme.typography.button,\n    display: 'flex',\n    margin: theme.spacing(0.2),\n    paddingLeft: theme.spacing(0.75),\n    paddingRight: theme.spacing(0.75),\n    borderRadius: theme.spacing(0.5),\n    '&:not(.current):hover': {\n      color: theme.palette.primary.contrastText,\n      background: theme.palette.primary.main\n    },\n    '&.current': {\n      color: theme.palette.text.hint,\n      '&:hover': {\n        color: theme.palette.secondary.contrastText,\n        background: theme.palette.secondary.light\n      }\n    },\n    '&.disabled': {\n      color: theme.palette.text.disabled,\n      pointerEvents: 'none'\n    }\n  }\n}));\n\ninterface MenuActionItemsProps {\n  idx: number;\n  title: string;\n  isEnabled: boolean;\n}\ninterface MenuActionProps {\n  items: Array<MenuActionItemsProps>;\n  menuIdx: number;\n  changeMenu: Dispatch<SetStateAction<number>>;\n}\n\nexport const MenuAction = ({ items, changeMenu, menuIdx }: MenuActionProps) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const [id, setId] = React.useState<string | undefined>(undefined);\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(!open);\n  };\n\n  useEffect(() => {\n    setOpen(Boolean(anchorEl));\n    setId(anchorEl ? 'simple-popover' : undefined);\n  }, [anchorEl]);\n\n  return (\n    <>\n      <ButtonBase className={`${classes.item} current`} onClick={handleClick}>\n        {items[menuIdx]?.title || '-'}\n        <ArrowDropDownIcon />\n      </ButtonBase>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={() => setOpen(false)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 24\n        }}\n        PaperProps={{\n          className: classes.menu\n        }}\n      >\n        {items.map((i, n) => (\n          <ButtonBase\n            className={`${classes.item} ${!i.isEnabled && 'disabled'}`}\n            key={n}\n            onClick={() => {\n              setOpen(!open);\n              changeMenu(i.idx);\n            }}\n          >\n            {i.title}\n          </ButtonBase>\n        ))}\n      </Popover>\n    </>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\n\nimport { SourceTargetActionsTypes } from '../actions/sourceTargetActions';\n\nexport interface ApiPromiseConnectionType {\n  api: ApiPromise; // From @polkadot/api\\\n  isApiReady: boolean;\n}\n\ninterface Payload {\n  [propName: string]: string;\n}\n\nexport type SourceTargetAction = { type: SourceTargetActionsTypes; payload?: Payload };\nexport interface ApiPromiseContextType {\n  api: ApiPromise; // From @polkadot/api\\\n  isApiReady: boolean;\n  polkadotjsUrl: string;\n}\n\nexport enum ChainDetails {\n  SOURCE = 'sourceChainDetails',\n  TARGET = 'targetChainDetails'\n}\n\nexport interface SourceTargetState {\n  [ChainDetails.SOURCE]: {\n    sourceApiConnection: ApiPromiseConnectionType;\n    sourceChain: string;\n    sourcePolkadotjsUrl: string;\n  };\n  [ChainDetails.TARGET]: {\n    targetApiConnection: ApiPromiseConnectionType;\n    targetChain: string;\n    targetPolkadotjsUrl: string;\n  };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SourceTargetActionsTypes } from '../actions/sourceTargetActions';\nimport { ChainDetails, SourceTargetAction, SourceTargetState } from '../types/sourceTargetTypes';\n\nexport default function sourceTargetReducer(state: SourceTargetState, action: SourceTargetAction): SourceTargetState {\n  switch (action.type) {\n    case SourceTargetActionsTypes.SWAP_CHAINS: {\n      if (action.payload!.chain !== state[ChainDetails.SOURCE].sourceChain) {\n        return {\n          [ChainDetails.SOURCE]: {\n            sourceApiConnection: state[ChainDetails.TARGET].targetApiConnection,\n            sourceChain: state[ChainDetails.TARGET].targetChain,\n            sourcePolkadotjsUrl: state[ChainDetails.TARGET].targetPolkadotjsUrl\n          },\n          [ChainDetails.TARGET]: {\n            targetApiConnection: state[ChainDetails.SOURCE].sourceApiConnection,\n            targetChain: state[ChainDetails.SOURCE].sourceChain,\n            targetPolkadotjsUrl: state[ChainDetails.SOURCE].sourcePolkadotjsUrl\n          }\n        };\n      }\n      return state;\n    }\n    default: {\n      throw new Error(`Unhandled type: ${action.type}`);\n    }\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport sourceTargetReducer from '../reducers/sourceTargetReducer';\nimport { ChainDetails, SourceTargetAction, SourceTargetState } from '../types/sourceTargetTypes';\nimport { ApiPromiseConnectionType } from '../types/sourceTargetTypes';\n\nexport interface UpdateSourceTargetContext {\n  dispatchChangeSourceTarget: React.Dispatch<SourceTargetAction>;\n}\n\ntype Connections = {\n  chainName: string;\n  apiConnection: ApiPromiseConnectionType;\n  polkadotjsUrl: string;\n};\n\nexport interface SourceTargetContextProps {\n  connections: Array<Connections>;\n  children: React.ReactElement;\n}\n\nexport const SourceTargetContext: React.Context<SourceTargetState> = React.createContext({} as SourceTargetState);\n\nexport function useSourceTarget() {\n  return useContext(SourceTargetContext);\n}\n\nexport const UpdateSourceTargetContext: React.Context<UpdateSourceTargetContext> = React.createContext(\n  {} as UpdateSourceTargetContext\n);\n\nexport function useUpdateSourceTarget() {\n  return useContext(UpdateSourceTargetContext);\n}\n\nconst initState = (connections: Array<Connections>) => {\n  const {\n    apiConnection: sourceApiConnection,\n    chainName: sourceChain,\n    polkadotjsUrl: sourcePolkadotjsUrl\n  } = connections[0];\n  const {\n    apiConnection: targetApiConnection,\n    chainName: targetChain,\n    polkadotjsUrl: targetPolkadotjsUrl\n  } = connections[1];\n  return {\n    [ChainDetails.SOURCE]: {\n      sourceApiConnection,\n      sourceChain,\n      sourcePolkadotjsUrl\n    },\n    [ChainDetails.TARGET]: {\n      targetApiConnection,\n      targetChain,\n      targetPolkadotjsUrl\n    }\n  };\n};\n\nexport function SourceTargetContextProvider({ connections, children }: SourceTargetContextProps): React.ReactElement {\n  const initialState = initState(connections);\n  const [sourceTargetChains, dispatchChangeSourceTarget] = useReducer(sourceTargetReducer, initialState);\n\n  return (\n    <SourceTargetContext.Provider value={sourceTargetChains}>\n      <UpdateSourceTargetContext.Provider value={{ dispatchChangeSourceTarget }}>\n        {children}\n      </UpdateSourceTargetContext.Provider>\n    </SourceTargetContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport winston from 'winston';\n\nwinston.addColors({\n  debug: 'grey',\n  error: 'red',\n  info: 'green',\n  warn: 'blue'\n});\n\nconst myformat = winston.format.cli({\n  all: true\n});\n\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: myformat\n    })\n  ]\n});\n\nexport default logger;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { useEffect, useState } from 'react';\n\nimport logger from '../util/logger';\n\ninterface Props {\n  chain: string;\n  api: ApiPromise;\n  isApiReady: boolean;\n}\n\nconst useBlocksInfo = ({ isApiReady, api, chain }: Props) => {\n  const [bestBlock, setBestBlock] = useState('');\n  const [bestBlockFinalized, setBestBlockFinalized] = useState('');\n\n  useEffect(() => {\n    if (!api || !isApiReady || !chain) {\n      setBestBlock('');\n      setBestBlockFinalized('');\n      return;\n    }\n\n    let unsubscribeBestNumber: () => void;\n    api.derive.chain\n      .bestNumber((res) => {\n        setBestBlock(res.toString());\n      })\n      .then((unsub) => {\n        unsubscribeBestNumber = unsub;\n      })\n      .catch((e) => logger.error('error reading blocks', e));\n\n    let unsubscribeBestNumberFinalized: () => void;\n    api.derive.chain\n      .bestNumberFinalized((res) => {\n        setBestBlockFinalized(res.toString());\n      })\n      .then((unsub) => {\n        unsubscribeBestNumberFinalized = unsub;\n      })\n      .catch((e) => logger.error('error reading blocks', e));\n\n    return function cleanup() {\n      unsubscribeBestNumberFinalized && unsubscribeBestNumberFinalized();\n      unsubscribeBestNumber && unsubscribeBestNumber();\n    };\n  }, [api, isApiReady, chain]);\n\n  return { bestBlock, bestBlockFinalized };\n};\n\nexport default useBlocksInfo;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport default function getSubstrateDynamicNames(key: string) {\n  const bridgedGrandpaChain = `bridge${key}Grandpa`;\n  const bridgedMessages = `bridge${key}Messages`;\n  const estimatedFeeMethodName = `To${key}OutboundLaneApi_estimate_message_delivery_and_dispatch_fee`;\n  const latestReceivedNonceMethodName = `From${key}InboundLaneApi_latest_received_nonce`;\n\n  const storageKey = `${key}-bridge-ui-transactions`;\n\n  return {\n    bridgedGrandpaChain,\n    bridgedMessages,\n    estimatedFeeMethodName,\n    latestReceivedNonceMethodName,\n    storageKey\n  };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { Hash } from '@polkadot/types/interfaces';\nimport { Codec } from '@polkadot/types/types';\nimport BN from 'bn.js';\nimport { useEffect, useState } from 'react';\n\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\ninterface HeaderId {\n  number: BN;\n  hash: Hash;\n}\n\ntype CodecHeaderId = Codec & HeaderId;\n// type CodecBestBloc = Codec & [HeaderId, any]\n\ninterface Props {\n  chain: string;\n  api: ApiPromise;\n  isApiReady: boolean;\n}\n\nconst useBridgedBlocks = ({ isApiReady, api, chain }: Props) => {\n  const [bestBridgedFinalizedBlock, setBestBridgedFinalizedBlock] = useState('');\n\n  const { bridgedGrandpaChain } = getSubstrateDynamicNames(chain);\n  useEffect(() => {\n    if (!api || !isApiReady || !chain) {\n      return;\n    }\n\n    let unsubBestFinalized: () => void;\n    let unsubImportedHeaders: () => void;\n\n    api.query[bridgedGrandpaChain]\n      .bestFinalized((res: CodecHeaderId) => {\n        const bestBridgedFinalizedBlock = res.toString();\n        api.query[bridgedGrandpaChain]\n          .importedHeaders(bestBridgedFinalizedBlock, (res: any) => {\n            if (res.toJSON()) {\n              setBestBridgedFinalizedBlock(res.toJSON().number);\n            }\n          })\n          .then((unsub) => {\n            unsubImportedHeaders = unsub;\n          });\n      })\n      .then((unsub) => {\n        unsubBestFinalized = unsub;\n      });\n\n    return function cleanup() {\n      unsubImportedHeaders && unsubImportedHeaders();\n      unsubBestFinalized && unsubBestFinalized();\n    };\n  }, [isApiReady, chain, api, bridgedGrandpaChain]);\n\n  return { bestBridgedFinalizedBlock };\n};\n\nexport default useBridgedBlocks;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport BN from 'bn.js';\nimport { useEffect, useState } from 'react';\n\nimport useLaneId from '../hooks/useLaneId';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\ninterface Props {\n  chain: string;\n  api: ApiPromise;\n  isApiReady: boolean;\n}\n\ninterface Output {\n  inboundLanes: {\n    bridgeReceivedMessages: string;\n  };\n  outboundLanes: {\n    pendingMessages: string;\n    totalMessages: string;\n    latestReceivedNonce: string;\n  };\n}\n\nconst useMessageLane = ({ isApiReady, api, chain }: Props): Output => {\n  const [outboundLanes, setOutboudLanes] = useState({\n    latestReceivedNonce: '0',\n    pendingMessages: '0',\n    totalMessages: '0'\n  });\n  const [inboundLanes, setInboudLanes] = useState({ bridgeReceivedMessages: '0' });\n\n  const laneId = useLaneId();\n  const { bridgedMessages, latestReceivedNonceMethodName } = getSubstrateDynamicNames(chain);\n  useEffect(() => {\n    if (!api || !isApiReady || !api.query[bridgedMessages] || !chain) {\n      return;\n    }\n\n    // to-do: review after depending on action to perform\n    let unsubscribeOutboundLanes: () => void;\n    let unsubscribeInboundLanes: () => void;\n    api.query[bridgedMessages]\n      .outboundLanes(laneId, (res: any) => {\n        const latest_generated_nonce = res.get('latest_generated_nonce').toString();\n        const latest_received_nonce = res.get('latest_received_nonce').toString();\n        const pendingMessages = new BN(latest_generated_nonce).sub(new BN(latest_received_nonce));\n\n        setOutboudLanes({\n          latestReceivedNonce: latest_received_nonce.toString(),\n          pendingMessages: pendingMessages.isNeg() ? '0' : pendingMessages.toString(),\n          totalMessages: latest_generated_nonce\n        });\n      })\n      .then((unsub) => {\n        unsubscribeOutboundLanes = unsub;\n      });\n    api.query[bridgedMessages]\n      .inboundLanes(laneId, (res: any) => {\n        setInboudLanes({ bridgeReceivedMessages: res.get('last_confirmed_nonce').toString() });\n      })\n      .then((unsub) => {\n        unsubscribeInboundLanes = unsub;\n      });\n\n    return function cleanup() {\n      unsubscribeOutboundLanes && unsubscribeOutboundLanes();\n      unsubscribeInboundLanes && unsubscribeInboundLanes();\n    };\n  }, [api, isApiReady, chain, bridgedMessages, laneId, latestReceivedNonceMethodName]);\n\n  return { inboundLanes, outboundLanes };\n};\n\nexport default useMessageLane;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport default function useLaneId(): string {\n  const laneId = process.env.REACT_APP_LANE_ID || '0x00000000';\n  // To complete with configuration logic once we will have different lane ids\n  return laneId;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ChainDetails } from '../types/sourceTargetTypes';\nimport useBlocksInfo from './useBlocksInfo';\nimport useBridgedBlocks from './useBridgedBlocks';\nimport useDashboardProfile from './useDashboardProfile';\nimport useMessagesLane from './useMessagesLane';\n\nconst useDashboard = (ChainDetail: ChainDetails) => {\n  const { api, destination, local, isApiReady, polkadotjsUrl } = useDashboardProfile(ChainDetail);\n\n  const blockInfo = useBlocksInfo({ api, chain: local, isApiReady });\n  const bridgedBlocks = useBridgedBlocks({ api, chain: destination, isApiReady });\n  const messagesLane = useMessagesLane({ api, chain: destination, isApiReady });\n\n  return { ...blockInfo, ...bridgedBlocks, ...messagesLane, local, polkadotjsUrl };\n};\n\nexport default useDashboard;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useEffect, useState } from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { ChainDetails } from '../types/sourceTargetTypes';\n\nexport default function useDashboardProfile(chainDetail: ChainDetails) {\n  const {\n    sourceChainDetails: { sourceApiConnection, sourceChain, sourcePolkadotjsUrl },\n    targetChainDetails: { targetApiConnection, targetChain, targetPolkadotjsUrl }\n  } = useSourceTarget();\n  const { isApiReady: isSourceApiReady, api: sourceApi } = sourceApiConnection;\n  const { isApiReady: isTargetApiReady, api: targetApi } = targetApiConnection;\n\n  const [profile, setProfile] = useState({\n    api: sourceApi,\n    destination: '',\n    isApiReady: isSourceApiReady,\n    local: '',\n    polkadotjsUrl: sourcePolkadotjsUrl\n  });\n\n  useEffect(() => {\n    let local = sourceChain;\n    let destination = targetChain;\n    let api = sourceApi;\n    let isApiReady = isSourceApiReady;\n    let polkadotjsUrl = sourcePolkadotjsUrl;\n    if (chainDetail === ChainDetails.TARGET) {\n      local = targetChain;\n      destination = sourceChain;\n      api = targetApi;\n      isApiReady = isTargetApiReady;\n      polkadotjsUrl = targetPolkadotjsUrl;\n    }\n\n    setProfile({ api, destination, isApiReady, local, polkadotjsUrl });\n  }, [\n    chainDetail,\n    isSourceApiReady,\n    isTargetApiReady,\n    sourceApi,\n    sourceChain,\n    sourcePolkadotjsUrl,\n    targetApi,\n    targetChain,\n    targetPolkadotjsUrl\n  ]);\n\n  return profile;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Divider, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\nimport React from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDashboard from '../hooks/useDashboard';\nimport { ChainDetails } from '../types/sourceTargetTypes';\n\n// As this is placed as a child in the Material UI Select component, for some reason style components classes are not working.\n// This way to inject the styles works.\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    position: 'relative',\n    ...theme.typography.h4,\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.spacing(0.5),\n    '& .MuiIconButton-root': {\n      backgroundColor: theme.palette.background.paper,\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: '-1rem',\n      width: '2rem',\n      height: '2rem',\n      margin: 'auto',\n      border: `1px solid ${theme.palette.divider}`,\n      transform: 'rotate(-90deg)',\n      transition: 'transform .15s',\n      '&:hover': {\n        transform: 'rotate(90deg)',\n        '& svg': {\n          transform: 'translateY(4px)',\n          transition: 'transform .1s',\n          '&.onlyHover': {\n            opacity: 1,\n            transform: 'scale(-1) translateY(4px)'\n          }\n        }\n      },\n      '& svg.onlyHover': {\n        opacity: 0,\n        position: 'absolute',\n        transform: 'scale(-1)'\n      }\n    }\n  },\n  statsEntry: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    fontSize: theme.typography.subtitle2.fontSize,\n    paddingLeft: 1,\n    paddingRight: 2,\n    '& span': {\n      ...theme.typography.subtitle2\n    }\n  }\n}));\n\nexport const NetworkSides = () => {\n  const classes = useStyles();\n  const { sourceChainDetails, targetChainDetails } = useSourceTarget();\n  return (\n    <Box marginY={2} className={classes.main}>\n      <Box p>{sourceChainDetails.sourceChain}</Box>\n      <Divider />\n      <IconButton size=\"small\">\n        <KeyboardReturnIcon className=\"onlyHover\" fontSize=\"small\" />\n        <KeyboardReturnIcon fontSize=\"small\" />\n      </IconButton>\n      <Box p>{targetChainDetails.targetChain}</Box>\n    </Box>\n  );\n};\n\nexport const NetworkStats = () => {\n  const classes = useStyles();\n  const dbSource = useDashboard(ChainDetails.SOURCE);\n\n  return (\n    <>\n      <Box className={classes.statsEntry}>\n        Finalized blocks:\n        <span>\n          {dbSource?.bestBlockFinalized} / {dbSource?.bestBlock}\n        </span>\n      </Box>\n      <Box className={classes.statsEntry}>\n        Relayed blocks:\n        <span>{dbSource?.bestBridgedFinalizedBlock}</span>\n      </Box>\n      <Box className={classes.statsEntry}>\n        Delivered messages:\n        <span>{dbSource?.outboundLanes.totalMessages}</span>\n      </Box>\n      <Box className={classes.statsEntry}>\n        Awaiting messages:\n        <span>{dbSource?.outboundLanes.pendingMessages}</span>\n      </Box>\n    </>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport { Step, TransanctionStatus } from '../types/transactionTypes';\nimport { ButtonSwitchMode } from './Buttons';\nimport { IconTxStatus } from './Icons';\n\ninterface Props {\n  steps: Array<Step>;\n  transaction: TransanctionStatus;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    '& p': {\n      ...theme.typography.body2\n    },\n    '& svg': {\n      marginBottom: '-0.2em',\n      fontSize: '1.2em',\n      marginRight: theme.spacing()\n    },\n    '& .header': {\n      fontWeight: 500\n    }\n  }\n}));\n\nexport const TransactionDisplay = ({ transaction, steps }: Props) => {\n  const classes = useStyles();\n  if (!steps.length) return null;\n\n  return (\n    <>\n      <ButtonSwitchMode disabled> Payload</ButtonSwitchMode>\n      <ButtonSwitchMode color=\"primary\"> Receipt</ButtonSwitchMode>\n      <ButtonSwitchMode disabled> Human</ButtonSwitchMode>\n      <Card elevation={24} className={classes.card}>\n        <Box className=\"header\" component=\"p\">\n          <IconTxStatus status={transaction.status} /> {transaction.type} {transaction.sourceChain} {'->'}{' '}\n          {transaction.targetChain}\n        </Box>\n        {steps.map(({ chainType, label, onChain, status }, idx) => (\n          <p key={idx}>\n            <IconTxStatus status={status} /> {chainType}: {label}&nbsp;\n            {onChain && (\n              <Box pt={0.25} pb={0.25} pl={0.5} pr={0.5} component=\"span\" border={1} borderRadius={6}>\n                <Typography component=\"span\" variant=\"subtitle2\">\n                  {onChain}\n                </Typography>\n              </Box>\n            )}\n          </p>\n        ))}\n      </Card>\n    </>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nconst expectedVariables = [\n  'REACT_APP_CHAIN_1',\n  'REACT_APP_CHAIN_2',\n  'REACT_APP_SUBSTRATE_PROVIDER_CHAIN_1',\n  'REACT_APP_SUBSTRATE_PROVIDER_CHAIN_2',\n  'REACT_APP_LANE_ID',\n  'REACT_APP_KEYRING_DEV_LOAD_ACCOUNTS',\n  'REACT_APP_SS58_PREFIX_CHAIN_1',\n  'REACT_APP_SS58_PREFIX_CHAIN_2',\n  'REACT_APP_BRIDGE_ID_CHAIN_1',\n  'REACT_APP_BRIDGE_ID_CHAIN_2'\n];\n\nconst checkExpectedVariables = () => {\n  for (const v of expectedVariables) {\n    if (!process.env[v]) {\n      throw new Error(`Missing ${v} variable`);\n    }\n  }\n  return true;\n};\n\nconst checkUnexpectedVariables = () => {\n  for (const v of Object.keys(process.env)) {\n    if (!expectedVariables.includes(v)) {\n      throw new Error(`Unexpected ${v} variable found.`);\n    }\n  }\n  return true;\n};\n\nconst checkEnvVariable = (variable: string) => {\n  const envVariable = process.env[variable];\n  if (!envVariable) {\n    throw new Error(`Env Variable ${variable} was not defined`);\n  }\n  return envVariable;\n};\n\nexport { checkEnvVariable, checkExpectedVariables, checkUnexpectedVariables };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { stringToU8a } from '@polkadot/util';\nimport { base64Encode } from '@polkadot/util-crypto';\nimport { zlibSync } from 'fflate';\n\nexport default function createPolkadotJsUrl(types: Record<string, any>, providerUrl: string): string {\n  const jsonU8a = stringToU8a(JSON.stringify(types));\n  const compressed = zlibSync(jsonU8a, { level: 9 });\n  const encoded = base64Encode(compressed);\n\n  return `https://polkadot.js.org/apps/?rpc=${encodeURIComponent(providerUrl)}&types=${encodeURIComponent(encoded)}`;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a, keccakAsU8a } from '@polkadot/util-crypto';\n\nimport createPolkadotJsUrl from '../../util/createPolkadotJsUrl';\nimport customTypesMillau from './customTypesMillau.json';\nimport customTypesRialto from './customTypesRialto.json';\n\nfunction hasherH512(data: any) {\n  return u8aConcat(blake2AsU8a(data), keccakAsU8a(data));\n}\n\nconst getConnectionChainInformation = (chain: string, providerUrl: string) => {\n  switch (chain) {\n    case 'Millau':\n      return {\n        hasher: hasherH512,\n        polkadotjsUrl: createPolkadotJsUrl(customTypesMillau, providerUrl),\n        types: customTypesMillau\n      };\n    case 'Rialto':\n      return { polkadotjsUrl: createPolkadotJsUrl(customTypesRialto, providerUrl), types: customTypesRialto };\n    default:\n      throw new Error(`Unknown chain: ${chain}`);\n  }\n};\n\nexport { getConnectionChainInformation };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { Account } from '../types/accountTypes';\n\nenum AccountActionsTypes {\n  SET_ACCOUNT = 'SET_ACCOUNT'\n}\n\nconst setAccount = (account: Account) => ({\n  payload: { account },\n  type: AccountActionsTypes.SET_ACCOUNT\n});\n\nconst AccountActionCreators = {\n  setAccount\n};\n\nexport { AccountActionsTypes, AccountActionCreators };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { WsProvider } from '@polkadot/api';\nimport { ApiOptions } from '@polkadot/api/types';\nimport { ProviderInterface } from '@polkadot/rpc-provider/types';\n\nimport { checkEnvVariable } from '../util/envVariablesValidations';\nimport { getConnectionChainInformation } from './substrateCustomTypes/';\n\nexport type CustomHasher = (data: Uint8Array) => Uint8Array;\n\ninterface ChainConfig {\n  bridgeId: string;\n  SS58Format: number;\n}\n\ninterface ProviderConfig {\n  hasher?: CustomHasher;\n  types: ApiOptions['types'];\n  provider: ProviderInterface;\n  polkadotjsUrl: string;\n}\n\ninterface ProviderConfigs {\n  [chain: string]: ProviderConfig;\n}\n\ninterface ChainConfigs {\n  [chain: string]: ChainConfig;\n}\n\nconst getChainNames = () => {\n  return [checkEnvVariable('REACT_APP_CHAIN_1'), checkEnvVariable('REACT_APP_CHAIN_2')];\n};\n\nexport const [CHAIN_1, CHAIN_2] = getChainNames();\n\nconst getTypeAndHasher = (chainNumber: string, providerUrl: string) =>\n  getConnectionChainInformation(checkEnvVariable(`REACT_APP_CHAIN_${chainNumber}`), providerUrl);\n\nconst getProvider = (provider: string) => new WsProvider(provider);\n\nconst createConfigObject = (chainNumber: string) => {\n  return {\n    SS58Format: parseInt(checkEnvVariable(`REACT_APP_SS58_PREFIX_CHAIN_${chainNumber}`)),\n    bridgeId: checkEnvVariable(`REACT_APP_BRIDGE_ID_CHAIN_${chainNumber}`)\n  };\n};\n\nexport const getChainConfigs = (): ChainConfigs => {\n  const [chain1, chain2] = getChainNames();\n  const configs = {\n    [chain1]: createConfigObject('1'),\n    [chain2]: createConfigObject('2')\n  };\n\n  return configs;\n};\n\nconst createProviderObject = (chainNumber: string) => {\n  const providerUrl = checkEnvVariable(`REACT_APP_SUBSTRATE_PROVIDER_CHAIN_${chainNumber}`);\n  const { types, hasher, polkadotjsUrl } = getTypeAndHasher(chainNumber, providerUrl);\n  return {\n    hasher,\n    polkadotjsUrl,\n    provider: getProvider(providerUrl),\n    types\n  };\n};\n\nexport const getChainProviders = (): ProviderConfigs => {\n  const [chain1, chain2] = getChainNames();\n  const providers = {\n    [chain1]: createProviderObject('1'),\n    [chain2]: createProviderObject('2')\n  };\n\n  return providers;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { AccountActionsTypes } from '../actions/accountActions';\nimport type { AccountsActionType, AccountState } from '../types/accountTypes';\n\nexport default function accountReducer(state: AccountState, action: AccountsActionType): AccountState {\n  switch (action.type) {\n    case AccountActionsTypes.SET_ACCOUNT:\n      return { ...state, account: action.payload.account };\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport accountReducer from '../reducers/accountReducer';\nimport { AccountContextType, AccountsActionType } from '../types/accountTypes';\n\ninterface AccountContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport interface UpdateAccountContext {\n  dispatchAccount: React.Dispatch<AccountsActionType>;\n}\n\nexport const AccountContext: React.Context<AccountContextType> = React.createContext({} as AccountContextType);\n\nexport const UpdateAccountContext: React.Context<UpdateAccountContext> = React.createContext(\n  {} as UpdateAccountContext\n);\n\nexport function useAccountContext() {\n  return useContext(AccountContext);\n}\n\nexport function useUpdateAccountContext() {\n  return useContext(UpdateAccountContext);\n}\n\nexport function AccountContextProvider(props: AccountContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n\n  const [account, dispatchAccount] = useReducer(accountReducer, {\n    account: null\n  });\n\n  return (\n    <AccountContext.Provider value={account}>\n      <UpdateAccountContext.Provider value={{ dispatchAccount }}>{children}</UpdateAccountContext.Provider>\n    </AccountContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { Payload } from '../types/messageTypes';\n\nenum MessageActionsTypes {\n  TRIGGER_MESSAGE = 'TRIGGER_MESSAGE',\n  CLEAR_MESSAGE = 'CLEAR_MESSAGE'\n}\n\nconst triggerInfoMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'info' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst triggerSuccessMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'success' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst triggerErrorMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'error' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst triggerWarningMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'warning' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst clearMessage = () => ({\n  payload: {},\n  type: MessageActionsTypes.CLEAR_MESSAGE\n});\n\nconst MessageActionsCreators = {\n  clearMessage,\n  triggerErrorMessage,\n  triggerInfoMessage,\n  triggerSuccessMessage,\n  triggerWarningMessage\n};\n\nexport { MessageActionsTypes, MessageActionsCreators };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { MessageActionsTypes } from '../actions/messageActions';\nimport type { MessagesActionType, MessageState } from '../types/messageTypes';\n\nexport default function messageReducer(state: MessageState, action: MessagesActionType): MessageState {\n  switch (action.type) {\n    case MessageActionsTypes.CLEAR_MESSAGE:\n      return { ...state, message: null, variant: null };\n    case MessageActionsTypes.TRIGGER_MESSAGE:\n      return { ...state, message: action.payload.message, variant: action.payload.variant };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport messageReducer from '../reducers/messageReducer';\nimport { MessageContextType, MessagesActionType } from '../types/messageTypes';\n\ninterface MessageContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport interface UpdateMessageContext {\n  dispatchMessage: React.Dispatch<MessagesActionType>;\n}\n\nexport const MessageContext: React.Context<MessageContextType> = React.createContext({} as MessageContextType);\n\nexport const UpdateMessageContext: React.Context<UpdateMessageContext> = React.createContext(\n  {} as UpdateMessageContext\n);\n\nexport function useMessageContext() {\n  return useContext(MessageContext);\n}\n\nexport function useUpdateMessageContext() {\n  return useContext(UpdateMessageContext);\n}\n\nexport function MessageContextProvider(props: MessageContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n\n  const [message, dispatchMessage] = useReducer(messageReducer, {\n    message: null,\n    variant: null\n  });\n\n  return (\n    <MessageContext.Provider value={message}>\n      <UpdateMessageContext.Provider value={{ dispatchMessage }}>{children}</UpdateMessageContext.Provider>\n    </MessageContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { KeyringPair } from '@polkadot/keyring/types';\n\nexport interface KeyringContextType {\n  accountExists: boolean;\n  extensionExists: boolean;\n  keyringPairs: Array<KeyringPair>;\n  keyringPairsReady: boolean;\n}\n\nexport enum KeyringStatuses {\n  INIT = 'INIT',\n  LOADING = 'LOADING',\n  READY = 'READY',\n  ERROR = 'ERROR'\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport keyring from '@polkadot/ui-keyring';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { KeyringContextType, KeyringStatuses } from '../types/keyringTypes';\nimport logger from '../util/logger';\n\ninterface KeyringContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport const KeyringContext: React.Context<KeyringContextType> = React.createContext({} as KeyringContextType);\n\nexport function useKeyringContext() {\n  return useContext(KeyringContext);\n}\n\nexport function KeyringContextProvider(props: KeyringContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n  const [keyringStatus, setKeyringStatus] = useState(KeyringStatuses.INIT);\n  const { dispatchMessage } = useUpdateMessageContext();\n  const [keyringPairs, setKeyringPairs] = useState<Array<KeyringPair>>([]);\n  const [keyringPairsReady, setkeyringPairsReady] = useState<boolean>(false);\n  const [extensionExists, setExtensionExists] = useState<boolean>(false);\n  const [accountExists, setAccountExists] = useState<boolean>(false);\n\n  const isDevelopment = Boolean(process.env.REACT_APP_KEYRING_DEV_LOAD_ACCOUNTS);\n\n  const loadAccounts = useCallback(() => {\n    const asyncLoadAccounts = async () => {\n      setKeyringStatus(KeyringStatuses.LOADING);\n      try {\n        const extExists = await web3Enable('Substrate Bridges UI');\n        if (extExists.length === 0) {\n          return;\n        } else {\n          setExtensionExists(true);\n        }\n        let allAccounts = await web3Accounts();\n        allAccounts?.length && setAccountExists(true);\n        allAccounts = allAccounts.map(({ address, meta }) => ({\n          address,\n          meta: { ...meta, name: `${meta.name}` }\n        }));\n\n        keyring.loadAll({ isDevelopment }, allAccounts);\n        setKeyringStatus(KeyringStatuses.READY);\n      } catch (e) {\n        dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e }));\n        logger.error(e);\n        setKeyringStatus(KeyringStatuses.ERROR);\n      }\n    };\n\n    if (keyringStatus === KeyringStatuses.LOADING || keyringStatus === KeyringStatuses.READY) return;\n\n    asyncLoadAccounts();\n  }, [dispatchMessage, isDevelopment, keyringStatus]);\n\n  useEffect(() => {\n    if (keyringStatus === KeyringStatuses.INIT) {\n      loadAccounts();\n    }\n  }, [keyringStatus, loadAccounts]);\n\n  useEffect(() => {\n    if (keyringStatus === KeyringStatuses.READY) {\n      const keyringOptions = keyring.getPairs();\n      setKeyringPairs(keyringOptions);\n      setkeyringPairsReady(true);\n    }\n  }, [keyringStatus]);\n\n  return (\n    <KeyringContext.Provider value={{ accountExists, extensionExists, keyringPairs, keyringPairsReady }}>\n      {children}\n    </KeyringContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransanctionStatus, UpdatedTransanctionStatus } from '../types/transactionTypes';\n\nenum TransactionActionTypes {\n  SET_ESTIMATED_FEE = 'SET_ESTIMATED_FEE',\n  SET_RECEIVER_ADDRESS = 'SET_RECEIVER_ADDRESS',\n  SET_UNFORMATTED_RECEIVER_ADDRESS = 'SET_UNFORMATTED_RECEIVER_ADDRESS',\n  CREATE_TRANSACTION_STATUS = 'CREATE_TRANSACTION_STATUS',\n  UPDATE_CURRENT_TRANSACTION_STATUS = 'UPDATE_CURRENT_TRANSACTION_STATUS',\n  SET_TRANSACTION_COMPLETED = 'SET_TRANSACTION_COMPLETED',\n  SET_RECEIVER_VALIDATION = 'SET_RECEIVER_VALIDATION',\n  SET_DERIVED_RECEIVER_ACCOUNT = 'SET_DERIVED_RECEIVER_ACCOUNT',\n  SET_GENERIC_RECEIVER_ACCOUNT = 'SET_GENERIC_RECEIVER_ACCOUNT'\n}\n\nconst estimateFee = (estimatedFee: string) => ({\n  payload: { estimatedFee },\n  type: TransactionActionTypes.SET_ESTIMATED_FEE\n});\n\nconst setReceiverAddress = (receiverAddress: string | null) => ({\n  payload: { receiverAddress },\n  type: TransactionActionTypes.SET_RECEIVER_ADDRESS\n});\n\nconst setUnformattedReceiverAddress = (unformattedReceiverAddress: string | null) => ({\n  payload: { unformattedReceiverAddress },\n  type: TransactionActionTypes.SET_UNFORMATTED_RECEIVER_ADDRESS\n});\n\nconst createTransactionStatus = (initialTransaction: TransanctionStatus) => {\n  return {\n    payload: { initialTransaction },\n    type: TransactionActionTypes.CREATE_TRANSACTION_STATUS\n  };\n};\n\nconst updateTransactionStatus = (updatedValues: UpdatedTransanctionStatus, id: string) => {\n  return {\n    payload: { id, updatedValues },\n    type: TransactionActionTypes.UPDATE_CURRENT_TRANSACTION_STATUS\n  };\n};\n\nconst setGenericAccount = (genericReceiverAccount: string | null) => ({\n  payload: { genericReceiverAccount },\n  type: TransactionActionTypes.SET_GENERIC_RECEIVER_ACCOUNT\n});\n\nconst setDerivedAccount = (derivedReceiverAccount: string | null) => ({\n  payload: { derivedReceiverAccount },\n  type: TransactionActionTypes.SET_DERIVED_RECEIVER_ACCOUNT\n});\n\nconst TransactionActionCreators = {\n  createTransactionStatus,\n  estimateFee,\n  setReceiverAddress,\n  setUnformattedReceiverAddress,\n  updateTransactionStatus,\n  setGenericAccount,\n  setDerivedAccount\n};\n\nexport { TransactionActionCreators, TransactionActionTypes };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionTypes } from '../actions/transactionActions';\nimport type { Payload, TransactionsActionType, TransactionState, TransanctionStatus } from '../types/transactionTypes';\n\nconst updateTransaction = (state: TransactionState, payload: Payload): TransactionState => {\n  if (state.transactions) {\n    const newState = { ...state };\n    const { updatedValues, id } = payload;\n    newState.transactions = newState.transactions.map((stateTransaction) => {\n      const { id: transactionId } = stateTransaction;\n      if (transactionId === id) {\n        return {\n          ...stateTransaction,\n          ...updatedValues\n        };\n      }\n      return stateTransaction;\n    });\n    return newState;\n  }\n  return state;\n};\n\nconst createTransaction = (state: TransactionState, initialTransaction: TransanctionStatus): TransactionState => {\n  const newState = { ...state };\n  newState.transactions.unshift(initialTransaction);\n  return newState;\n};\n\nexport default function transactionReducer(state: TransactionState, action: TransactionsActionType): TransactionState {\n  switch (action.type) {\n    case TransactionActionTypes.SET_ESTIMATED_FEE:\n      return { ...state, estimatedFee: action.payload.estimatedFee };\n    case TransactionActionTypes.SET_RECEIVER_ADDRESS:\n      return { ...state, receiverAddress: action.payload.receiverAddress };\n    case TransactionActionTypes.SET_UNFORMATTED_RECEIVER_ADDRESS:\n      return { ...state, unformattedReceiverAddress: action.payload.unformattedReceiverAddress };\n    case TransactionActionTypes.CREATE_TRANSACTION_STATUS:\n      return createTransaction(state, action.payload.initialTransaction);\n    case TransactionActionTypes.UPDATE_CURRENT_TRANSACTION_STATUS:\n      return updateTransaction(state, action.payload);\n    case TransactionActionTypes.SET_DERIVED_RECEIVER_ACCOUNT:\n      return { ...state, derivedReceiverAccount: action.payload.derivedReceiverAccount };\n    case TransactionActionTypes.SET_GENERIC_RECEIVER_ACCOUNT:\n      return { ...state, genericReceiverAccount: action.payload.genericReceiverAccount };\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport transactionReducer from '../reducers/transactionReducer';\nimport { TransactionContextType, TransactionsActionType } from '../types/transactionTypes';\n\ninterface TransactionContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport interface UpdateTransactionContext {\n  dispatchTransaction: React.Dispatch<TransactionsActionType>;\n}\n\nexport const TransactionContext: React.Context<TransactionContextType> = React.createContext(\n  {} as TransactionContextType\n);\n\nexport const UpdateTransactionContext: React.Context<UpdateTransactionContext> = React.createContext(\n  {} as UpdateTransactionContext\n);\n\nexport function useTransactionContext() {\n  return useContext(TransactionContext);\n}\n\nexport function useUpdateTransactionContext() {\n  return useContext(UpdateTransactionContext);\n}\n\nexport function TransactionContextProvider(props: TransactionContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n\n  const [transaction, dispatchTransaction] = useReducer(transactionReducer, {\n    derivedReceiverAccount: null,\n    estimatedFee: null,\n    genericReceiverAccount: null,\n    receiverAddress: null,\n    unformattedReceiverAddress: null,\n    transactions: []\n  });\n\n  return (\n    <TransactionContext.Provider value={transaction}>\n      <UpdateTransactionContext.Provider value={{ dispatchTransaction }}>{children}</UpdateTransactionContext.Provider>\n    </TransactionContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { ApiOptions } from '@polkadot/api/types';\nimport { ProviderInterface } from '@polkadot/rpc-provider/types';\nimport { TypeRegistry } from '@polkadot/types';\nimport React, { useEffect, useState } from 'react';\n\nimport { ApiPromiseConnectionType } from '../types/sourceTargetTypes';\nimport logger from '../util/logger';\n\nexport interface ApiRxProviderProps {\n  chain: string;\n  hasher?: (data: Uint8Array) => Uint8Array;\n  provider: ProviderInterface;\n  types?: ApiOptions['types'];\n}\n\nexport const ApiPromiseContext: React.Context<ApiPromiseConnectionType> = React.createContext(\n  {} as ApiPromiseConnectionType\n);\n\nconst registry = new TypeRegistry();\n\nexport function useApiConnection({ chain, hasher, provider, types }: ApiRxProviderProps): ApiPromiseConnectionType {\n  const [apiPromise, setApiPromise] = useState<ApiPromise>({} as ApiPromise);\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    ApiPromise.create({ hasher, provider, types })\n      .then((api): void => {\n        logger.info(`${chain}: connection created.`);\n        setApiPromise(api);\n      })\n      .catch((err): void => {\n        logger.error(`${chain}: Error creating connection. Details: ${err}`);\n      });\n  }, [chain, hasher, provider, types]);\n\n  useEffect(() => {\n    !isReady &&\n      apiPromise &&\n      apiPromise.isReady &&\n      apiPromise.isReady\n        .then(() => {\n          if (types) {\n            registry.register(types);\n          }\n          logger.info(`${chain}: types registration ready`);\n          setIsReady(true);\n        })\n        .catch((err): void => {\n          logger.error(`${chain}: Error registering types. Details: ${err}`);\n        });\n  }, [apiPromise, chain, isReady, types]);\n\n  return { api: apiPromise, isApiReady: isReady };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useEffect, useState } from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\n\nexport default function useLoadingApi(): boolean {\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { isApiReady: isSourceApiReady }\n    },\n    targetChainDetails: {\n      targetApiConnection: { isApiReady: isTargetApiReady }\n    }\n  } = useSourceTarget();\n\n  const [areReady, setAreReady] = useState(false);\n\n  useEffect(() => {\n    setAreReady(isSourceApiReady && isTargetApiReady);\n  }, [isSourceApiReady, isTargetApiReady]);\n\n  return areReady;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { Codec } from '@polkadot/types/types';\nimport { compactAddLength } from '@polkadot/util';\nimport { useEffect, useState } from 'react';\n\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useLaneId from '../hooks/useLaneId';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport useTransactionType from '../hooks/useTransactionType';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\nimport logger from '../util/logger';\n\ninterface Props {\n  input: string;\n  type: string;\n  weightInput?: string;\n  isValidCall?: boolean;\n}\n\ninterface FeeAndPayload {\n  payload: any;\n}\n\nexport default function useTransactionPreparation({\n  input,\n  type,\n  weightInput,\n  isValidCall = true\n}: Props): FeeAndPayload {\n  const areApiReady = useLoadingApi();\n  const laneId = useLaneId();\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi }\n    },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n  const { account } = useAccountContext();\n\n  const [payload, setPayload] = useState<null | {}>(null);\n  const { call, weight } = useTransactionType({ input, type, weightInput });\n\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const { estimatedFeeMethodName } = getSubstrateDynamicNames(targetChain);\n\n  useEffect(() => {\n    const calculateFee = async () => {\n      // Ignoring custom types missed for TS for now.\n      // Need to apply: https://polkadot.js.org/docs/api/start/typescript.user\n      // @ts-ignore\n      const payloadType = sourceApi.registry.createType('OutboundPayload', payload);\n      // @ts-ignore\n      const messageFeeType = sourceApi.registry.createType('MessageFeeData', {\n        lane_id: laneId,\n        payload: payloadType.toHex()\n      });\n\n      const estimatedFeeCall = await sourceApi.rpc.state.call<Codec>(estimatedFeeMethodName, messageFeeType.toHex());\n\n      // @ts-ignore\n      const estimatedFeeType = sourceApi.registry.createType('Option<Balance>', estimatedFeeCall);\n      const estimatedFee = estimatedFeeType.toString();\n      dispatchTransaction(TransactionActionCreators.estimateFee(estimatedFee));\n    };\n\n    if (areApiReady && payload) {\n      calculateFee();\n    }\n  }, [\n    areApiReady,\n    dispatchTransaction,\n    estimatedFeeMethodName,\n    laneId,\n    payload,\n    sourceApi.registry,\n    sourceApi.rpc.state,\n    targetChain\n  ]);\n\n  useEffect(() => {\n    if (!(isValidCall && account && call && weight)) {\n      return;\n    }\n\n    const payload = {\n      call: compactAddLength(call),\n      origin: {\n        SourceAccount: account.addressRaw\n      },\n      // TODO [#122] This must not be hardcoded.\n      spec_version: 1,\n      weight\n    };\n    // @ts-ignore\n    const payloadType = sourceApi.registry.createType('OutboundPayload', payload);\n    logger.info(`OutboundPayload: ${JSON.stringify(payload)}`);\n    logger.info(`OutboundPayload.toHex(): ${payloadType.toHex()}`);\n    setPayload(payload);\n  }, [account, call, isValidCall, type, weight, sourceApi.registry]);\n\n  return {\n    payload\n  };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { hexToU8a, isHex } from '@polkadot/util';\nimport { useEffect, useState } from 'react';\n\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { TransactionTypes } from '../types/transactionTypes';\nimport logger from '../util/logger';\ninterface TransactionFunction {\n  call: Uint8Array | null;\n  weight: number | null;\n}\n\ninterface Props {\n  input: string;\n  type: string;\n  weightInput?: string;\n}\n\nexport default function useTransactionType({ input, type, weightInput }: Props): TransactionFunction {\n  const areApiReady = useLoadingApi();\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi }\n    },\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi }\n    }\n  } = useSourceTarget();\n\n  const { account } = useAccountContext();\n  const { receiverAddress } = useTransactionContext();\n\n  const [values, setValues] = useState<TransactionFunction>({\n    call: null,\n    weight: null\n  });\n\n  useEffect(() => {\n    async function getValues() {\n      let apiPromise, paymentInfo, apiCall;\n      let weight = null;\n      let call = null;\n\n      if (account) {\n        switch (type) {\n          case TransactionTypes.REMARK:\n            apiPromise = targetApi.tx.system.remark(input);\n            paymentInfo = await apiPromise.paymentInfo(account);\n            apiCall = await apiPromise;\n            logger.info(`system::remark: ${apiCall.toHex()}`);\n            // TODO [#121] Figure out what the extra bytes are about\n            call = apiCall.toU8a().slice(2);\n            weight = paymentInfo.weight.toNumber();\n            break;\n          case TransactionTypes.TRANSFER:\n            if (receiverAddress) {\n              apiPromise = targetApi.tx.balances.transfer(receiverAddress, input);\n              paymentInfo = await apiPromise.paymentInfo(account);\n              apiCall = await apiPromise;\n              logger.info(`balances::transfer: ${apiCall.toHex()}`);\n              // TODO [#121] Figure out what the extra bytes are about\n              call = apiCall.toU8a().slice(2);\n              weight = paymentInfo.weight.toNumber();\n            }\n            break;\n          case TransactionTypes.CUSTOM:\n            call = isHex(input) ? hexToU8a(input) : null;\n            weight = parseInt(weightInput!);\n            break;\n          default:\n            throw new Error(`Unknown type: ${type}`);\n        }\n        setValues({ call, weight });\n      }\n    }\n\n    if (areApiReady) {\n      getValues();\n    }\n  }, [account, areApiReady, input, receiverAddress, sourceApi, targetApi, type, weightInput]);\n\n  return values;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SignerOptions } from '@polkadot/api/types';\nimport { web3FromSource } from '@polkadot/extension-dapp';\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport moment from 'moment';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext, useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useLaneId from '../hooks/useLaneId';\nimport useTransactionPreparation from '../hooks/useTransactionPreparation';\nimport { TransactionStatusEnum, TransactionTypes } from '../types/transactionTypes';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\nimport logger from '../util/logger';\n\ninterface Props {\n  isValidCall?: boolean;\n  isRunning: boolean;\n  setIsRunning: (status: boolean) => void;\n  input: string;\n  type: string;\n  weightInput?: string;\n}\n\nfunction useSendMessage({ isRunning, isValidCall, setIsRunning, input, type, weightInput }: Props) {\n  const { estimatedFee, receiverAddress } = useTransactionContext();\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const laneId = useLaneId();\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi },\n      sourceChain\n    },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n  const { account } = useAccountContext();\n  const { payload } = useTransactionPreparation({ input, isValidCall, type, weightInput });\n  const { dispatchMessage } = useUpdateMessageContext();\n\n  const sendLaneMessage = async () => {\n    if (!account || isRunning) {\n      return;\n    }\n    const id = moment().format('x');\n    setIsRunning(true);\n    return makeCall(id);\n  };\n\n  const makeCall = async (id: string) => {\n    try {\n      if (!account || isRunning) {\n        return;\n      }\n\n      const { bridgedMessages } = getSubstrateDynamicNames(targetChain);\n      const bridgeMessage = sourceApi.tx[bridgedMessages].sendMessage(laneId, payload, estimatedFee);\n      logger.info('bridge::sendMessage', bridgeMessage.toHex());\n      const options: Partial<SignerOptions> = {\n        nonce: -1\n      };\n      let sourceAccount: string | KeyringPair = account;\n      if (account.meta.isInjected) {\n        const injector = await web3FromSource(account.meta.source as string);\n        options.signer = injector.signer;\n        sourceAccount = account.address;\n      }\n      const unsub = await bridgeMessage.signAndSend(sourceAccount, { ...options }, ({ events = [], status }) => {\n        if (status.isReady) {\n          dispatchTransaction(\n            TransactionActionCreators.createTransactionStatus({\n              block: null,\n              blockHash: null,\n              id,\n              input,\n              messageNonce: null,\n              receiverAddress,\n              sourceAccount: account.address,\n              sourceChain,\n              status: TransactionStatusEnum.CREATED,\n              targetChain,\n              type\n            })\n          );\n        }\n        if (status.isBroadcast) {\n          dispatchMessage(MessageActionsCreators.triggerInfoMessage({ message: 'Transaction was broadcasted' }));\n        }\n        if (status.isInBlock) {\n          events.forEach(({ event: { data, method } }) => {\n            if (method.toString() === 'MessageAccepted') {\n              const messageNonce = data.toArray()[1].toString();\n              sourceApi.rpc.chain\n                .getBlock(status.asInBlock)\n                .then((res) => {\n                  const block = res.block.header.number.toString();\n                  dispatchTransaction(\n                    TransactionActionCreators.updateTransactionStatus(\n                      {\n                        block,\n                        blockHash: status.asInBlock.toString(),\n                        messageNonce,\n                        status: TransactionStatusEnum.IN_PROGRESS\n                      },\n                      id\n                    )\n                  );\n                })\n                .catch((e) => {\n                  logger.error(e.message);\n                  throw new Error('Issue reading block information.');\n                });\n            }\n          });\n        }\n        if (status.isFinalized) {\n          logger.info(`Transaction included at blockHash ${status.asFinalized}`);\n          unsub();\n        }\n      });\n    } catch (e) {\n      dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e.message }));\n      logger.error(e.message);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const isButtonDisabled = () => {\n    switch (type) {\n      case TransactionTypes.REMARK:\n        return isRunning || !account;\n        break;\n      case TransactionTypes.TRANSFER:\n        return isRunning || !receiverAddress || !account;\n        break;\n      case TransactionTypes.CUSTOM:\n        return isRunning || !account || !input || !weightInput || !isValidCall;\n        break;\n      default:\n        throw new Error(`Unknown type: ${type}`);\n    }\n  };\n\n  return { isButtonDisabled, sendLaneMessage };\n}\n\nexport default useSendMessage;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button, Container, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Message } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport useSendMessage from '../hooks/useSendMessage';\nimport { TransactionTypes } from '../types/transactionTypes';\ninterface Props {\n  className?: string;\n}\n\nconst CustomCall = ({ className }: Props) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [decoded, setDecoded] = useState<string | null>();\n\n  const [customCallInput, setCustomCallInput] = useState('0x');\n  const [weightInput, setWeightInput] = useState<string>();\n  const [error, setError] = useState<string | null>();\n\n  const areApiReady = useLoadingApi();\n  const { estimatedFee } = useTransactionContext();\n  const {\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi }\n    }\n  } = useSourceTarget();\n\n  const { isButtonDisabled, sendLaneMessage } = useSendMessage({\n    input: customCallInput,\n    isRunning,\n    isValidCall: Boolean(decoded),\n    setIsRunning,\n    type: TransactionTypes.CUSTOM,\n    weightInput\n  });\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    decodePayload(event.target.value);\n    setCustomCallInput(event.target.value);\n  };\n\n  const onWeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setWeightInput(event.target.value);\n  };\n\n  if (!areApiReady) {\n    return null;\n  }\n\n  function decodePayload(input: string) {\n    try {\n      setError(null);\n      const call = targetApi.createType('Call', input);\n      setDecoded(JSON.stringify(call, null, 4));\n    } catch (e) {\n      setError('Wrong call provided.');\n      setDecoded(null);\n    }\n  }\n\n  return (\n    <>\n      <h2>Custom Call</h2>\n      <Container className={className}>\n        <div>\n          <TextField onChange={onChange} value={customCallInput} label=\"Call\" variant=\"outlined\" />\n          <p>{error && `${error}`}</p>\n        </div>\n        <br />\n        <div>\n          <TextField onChange={onWeightChange} value={weightInput} label=\"Weight\" variant=\"outlined\" />\n\n          <Button variant=\"contained\" disabled={isButtonDisabled()} onClick={sendLaneMessage}>\n            Send Custom Call\n          </Button>\n        </div>\n      </Container>\n      <p>{estimatedFee && `Estimated source Fee: ${estimatedFee}`}</p>\n      <div>\n        {decoded && (\n          <Message>\n            <Message.Header>Decoded Call</Message.Header>\n            <p>\n              <pre>{decoded}</pre>\n            </p>\n          </Message>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default styled(CustomCall)`\n  display: flex !important;\n  justify-content: start !important;\n`;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Card, CardContent, Container } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport useDashboard from '../hooks/useDashboard';\nimport { ChainDetails } from '../types/sourceTargetTypes';\n\ninterface Props {\n  chainDetail: ChainDetails;\n  className?: string;\n}\n\nconst DashboardCard = ({ chainDetail, className }: Props) => {\n  const {\n    bestBlockFinalized,\n    bestBlock,\n    bestBridgedFinalizedBlock,\n    outboundLanes: { totalMessages, pendingMessages },\n    inboundLanes: { bridgeReceivedMessages },\n    local,\n    polkadotjsUrl\n  } = useDashboard(chainDetail);\n\n  const headerText = chainDetail === ChainDetails.SOURCE ? 'Source' : 'Target';\n\n  const Header = () => (\n    <>\n      <h3>\n        {headerText}:{' '}\n        <a href={polkadotjsUrl} target=\"_blank\" rel=\"noreferrer\">\n          {local}\n        </a>\n      </h3>\n    </>\n  );\n  return (\n    <Container className={className}>\n      <Card className=\"container\">\n        <CardContent>\n          <Header />\n          <div>Best Block: {bestBlock}</div>\n          <div>Best Finalized block: {bestBlockFinalized}</div>\n\n          <div>Pending Messages: {pendingMessages}</div>\n          <div>Total Messages: {totalMessages}</div>\n\n          <hr className=\"divider\" />\n          <div>Best Target Finalized block: {bestBridgedFinalizedBlock}</div>\n          <div>Received Messages: {bridgeReceivedMessages}</div>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\nexport default styled(DashboardCard)`\n  word-wrap: break-word;\n  .divider {\n    max-width: 80%;\n  }\n  .description {\n    margin: 10px;\n  }\n`;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport React from 'react';\n\nimport { useKeyringContext } from '../contexts/KeyringContextProvider';\n\ninterface Props {\n  component: JSX.Element;\n}\n\nconst Alert = (props: JSX.IntrinsicAttributes & AlertProps) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst ExtensionAccountCheck = ({ component }: Props): JSX.Element => {\n  const { extensionExists, accountExists } = useKeyringContext();\n\n  let msg: string = '';\n  if (!extensionExists) {\n    msg = 'Connect to a wallet. Install polkadotjs extension';\n  } else if (!accountExists) {\n    msg = 'There are no accounts in the extension. Please create one. Please create one';\n  }\n\n  return <>{accountExists ? component : <Alert severity=\"error\">{msg}</Alert>}</>;\n};\n\nexport default ExtensionAccountCheck;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button, Container, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport useSendMessage from '../hooks/useSendMessage';\nimport { TransactionTypes } from '../types/transactionTypes';\ninterface Props {\n  className?: string;\n}\n\nconst Remark = ({ className }: Props) => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [remarkInput, setRemarkInput] = useState('0x');\n  const areApiReady = useLoadingApi();\n  const { estimatedFee } = useTransactionContext();\n\n  const { isButtonDisabled, sendLaneMessage } = useSendMessage({\n    input: remarkInput,\n    isRunning,\n    setIsRunning,\n    type: TransactionTypes.REMARK\n  });\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRemarkInput(event.target.value);\n  };\n\n  if (!areApiReady) {\n    return null;\n  }\n\n  // TO-DO: Remove <br /> by proper margins\n  return (\n    <>\n      <h2>Remark</h2>\n      <Container className={className}>\n        <TextField onChange={onChange} value={remarkInput} variant=\"outlined\" />\n        <Button variant=\"contained\" disabled={isButtonDisabled()} onClick={sendLaneMessage}>\n          Send Remark\n        </Button>\n        <p>{estimatedFee && `Estimated source Fee: ${estimatedFee}`}</p>\n      </Container>\n    </>\n  );\n};\n\nexport default styled(Remark)`\n  margin: 40px 0;\n  display: flex !important;\n  justify-content: start !important;\n`;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { compactAddLength, stringToU8a } from '@polkadot/util';\nimport { blake2AsHex, decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n\nconst accountDerivation = 'pallet-bridge/account-derivation/account';\n\ninterface Data {\n  SS58Format: number;\n  bridgeId: string;\n  address: string;\n}\n\nexport default function getDeriveAccount({ SS58Format = 42, bridgeId, address }: Data): string {\n  const input = [\n    ...compactAddLength(stringToU8a(accountDerivation)),\n    ...stringToU8a(bridgeId),\n    ...decodeAddress(address)\n  ];\n  return encodeAddress(blake2AsHex(Uint8Array.from(input)), SS58Format);\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { getChainConfigs } from '../configs/substrateProviders';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport getDeriveAccount from '../util/getDeriveAccount';\n\nconst useDerivedAccount = () => {\n  const {\n    targetChainDetails: { targetChain },\n    sourceChainDetails: { sourceChain }\n  } = useSourceTarget();\n  const { account } = useAccountContext();\n  const chainsConfigs = getChainConfigs();\n  const { SS58Format } = chainsConfigs[targetChain];\n  const { bridgeId } = chainsConfigs[sourceChain];\n\n  if (!account) {\n    return null;\n  }\n\n  const toDerive = {\n    SS58Format,\n    address: account.address,\n    bridgeId\n  };\n  return getDeriveAccount(toDerive);\n};\n\nexport default useDerivedAccount;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { getChainConfigs } from '../configs/substrateProviders';\nconst chainsConfigs = getChainConfigs();\n\nexport default function getChainSS58(chain: string) {\n  return chainsConfigs[chain].SS58Format;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport { encodeAddress } from '@polkadot/util-crypto';\nimport { useEffect, useState } from 'react';\n\nimport { AccountActionCreators } from '../actions/accountActions';\nimport { SourceTargetActionsCreators } from '../actions/sourceTargetActions';\nimport { useUpdateAccountContext } from '../contexts/AccountContextProvider';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useKeyringContext } from '../contexts/KeyringContextProvider';\nimport { useUpdateSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDerivedAccount from '../hooks/useDerivedAccount';\nimport getChainSS58 from '../util/getSS58';\ninterface Accounts {\n  account: KeyringPair | null;\n  accounts: Array<KeyringPair> | [];\n  derivedAccount: string | null;\n  setCurrentAccount: (value: string, chain: string) => void;\n}\n\nconst useAccounts = (): Accounts => {\n  const { keyringPairs, keyringPairsReady } = useKeyringContext();\n  const [accounts, setAccounts] = useState<Array<KeyringPair> | []>([]);\n  const { dispatchAccount } = useUpdateAccountContext();\n  const { dispatchChangeSourceTarget } = useUpdateSourceTarget();\n  const derivedAccount = useDerivedAccount();\n  const { account } = useAccountContext();\n\n  useEffect(() => {\n    if (keyringPairsReady && keyringPairs.length) {\n      setAccounts(keyringPairs);\n    }\n  }, [keyringPairsReady, keyringPairs, setAccounts]);\n\n  const setCurrentAccount = (value: string, chain: string) => {\n    const ss58Format = getChainSS58(chain);\n\n    const account = accounts.find(({ address }) => encodeAddress(address, ss58Format) === value);\n    if (account) {\n      dispatchChangeSourceTarget(SourceTargetActionsCreators.switchChains(chain));\n      dispatchAccount(AccountActionCreators.setAccount(account));\n    }\n  };\n\n  return {\n    account,\n    accounts,\n    derivedAccount,\n    setCurrentAccount\n  };\n};\n\nexport default useAccounts;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const SOURCE = 'sourceChain';\nexport const TARGET = 'targetChain';\n\nexport const INCORRECT_FORMAT = 'INCORRECT_FORMAT';\nexport const GENERIC = 'GENERIC';\nexport const GENERIC_SUBSTRATE_PREFIX = 42;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { checkAddress } from '@polkadot/util-crypto';\n\nimport { getChainConfigs } from '../configs/substrateProviders';\nimport { INCORRECT_FORMAT, GENERIC, GENERIC_SUBSTRATE_PREFIX } from '../constants';\nimport getDeriveAccount from './getDeriveAccount';\n\ninterface Props {\n  receiverAddress: string;\n  targetChain: string;\n  sourceChain: string;\n}\nconst getReceiverAddress = ({ receiverAddress, targetChain, sourceChain }: Props) => {\n  const chainsConfigs = getChainConfigs();\n  const { SS58Format } = chainsConfigs[targetChain];\n  const { bridgeId } = chainsConfigs[sourceChain];\n\n  try {\n    const [validatedDerivedAcccount, rest] = checkAddress(receiverAddress, SS58Format);\n    if (validatedDerivedAcccount) {\n      return { address: receiverAddress, formatFound: targetChain };\n    }\n    // should be extracted as a separate component/function\n    const getFormat = (prefix: string) => {\n      const intPrefix: number = parseInt(prefix, 10);\n      if (intPrefix === GENERIC_SUBSTRATE_PREFIX) {\n        return GENERIC;\n      }\n      const chainsConfigs = getChainConfigs();\n      return Object.keys(chainsConfigs).find((key) => chainsConfigs[key].SS58Format === intPrefix);\n    };\n\n    const parts = rest?.split(',');\n    const prefix = parts![2].split(' ');\n    const formatFound = getFormat(prefix[2]) || prefix[2];\n\n    const address = getDeriveAccount({\n      SS58Format,\n      address: receiverAddress,\n      bridgeId\n    });\n\n    return { address, formatFound };\n  } catch (e) {\n    if (receiverAddress) {\n      throw new Error(INCORRECT_FORMAT);\n    }\n    return { address: '', formatFound: null };\n  }\n};\n\nexport default getReceiverAddress;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { INCORRECT_FORMAT } from '../constants';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport getReceiverAddress from '../util/getReceiverAddress';\nimport logger from '../util/logger';\n\nexport default function useReceiver() {\n  const { dispatchTransaction } = useUpdateTransactionContext();\n\n  const {\n    targetChainDetails: { targetChain },\n    sourceChainDetails: { sourceChain }\n  } = useSourceTarget();\n\n  const setReceiver = (address: string | null) =>\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(address));\n\n  const setUnformattedReceiver = (address: string | null) =>\n    dispatchTransaction(TransactionActionCreators.setUnformattedReceiverAddress(address));\n\n  const validateAccount = (receiver: string) => {\n    try {\n      const { address, formatFound } = getReceiverAddress({\n        targetChain,\n        sourceChain,\n        receiverAddress: receiver\n      });\n\n      return { formatFound, formattedAccount: address };\n    } catch (e) {\n      logger.error(e.message);\n      if (e.message === INCORRECT_FORMAT) {\n        return { formatFound: e.message, formattedAccount: receiver };\n      }\n    }\n  };\n\n  return { setReceiver, setUnformattedReceiver, validateAccount };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { ApiPromise } from '@polkadot/api';\nimport { INCORRECT_FORMAT, GENERIC } from '../constants';\nimport { getChainConfigs } from '../configs/substrateProviders';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport getDeriveAccount from '../util/getDeriveAccount';\n\ntype State = {\n  address: string;\n  api: ApiPromise;\n};\n\nconst useApiBalance = (address: string | null, chain: string | undefined, isDerived: boolean): State => {\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi },\n      sourceChain\n    },\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi },\n      targetChain\n    }\n  } = useSourceTarget();\n\n  if (!chain || !address || chain === INCORRECT_FORMAT || chain === GENERIC) {\n    return { address: '', api: {} as ApiPromise };\n  }\n\n  const chainsConfigs = getChainConfigs();\n  const { SS58Format } = chainsConfigs[chain === targetChain ? targetChain : sourceChain];\n  const { bridgeId } = chainsConfigs[chain === targetChain ? sourceChain : targetChain];\n  const addressResult = !isDerived\n    ? address\n    : getDeriveAccount({\n        SS58Format,\n        address,\n        bridgeId\n      });\n\n  const processedApi = chain === targetChain ? targetApi : sourceApi;\n\n  return { address: addressResult, api: processedApi };\n};\n\nexport default useApiBalance;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { VoidFn } from '@polkadot/api/types';\nimport { Balance } from '@polkadot/types/interfaces';\nimport { formatBalance } from '@polkadot/util';\nimport BN from 'bn.js';\nimport { useEffect, useState } from 'react';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport logger from '../util/logger';\n\ntype State = {\n  chainTokens: string;\n  formattedBalance: string;\n  free: Balance;\n};\n\nconst ZERO = new BN(0);\n\nconst initValues = {\n  chainTokens: '-',\n  formattedBalance: '0',\n  free: new BN(ZERO) as Balance\n};\n\nconst useBalance = (api: ApiPromise, address: string, providedSi: boolean = false): State => {\n  const { dispatchMessage } = useUpdateMessageContext();\n  const [state, setState] = useState<State>(initValues);\n\n  useEffect((): (() => void) => {\n    let unsubscribe: Promise<VoidFn>;\n\n    const getBalance = async (api: ApiPromise, address: string, setState: any): Promise<VoidFn> => {\n      try {\n        const u = await api.query.system.account(address, ({ data }): void => {\n          setState({\n            chainTokens: data.registry.chainTokens[0],\n            formattedBalance: formatBalance(data.free, {\n              decimals: api.registry.chainDecimals[0],\n              withUnit: data.registry.chainTokens[0],\n              forceUnit: '-',\n              withSi: providedSi\n            }),\n            free: data.free\n          });\n        });\n        return Promise.resolve(u);\n      } catch (e) {\n        dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e.message }));\n        logger.error(e.message);\n        return Promise.reject();\n      }\n    };\n\n    if (address) {\n      unsubscribe = getBalance(api, address, setState);\n    }\n    return async (): Promise<void> => {\n      unsubscribe && (await unsubscribe)();\n    };\n  }, [address, providedSi, dispatchMessage, api]);\n\n  return state;\n};\n\nexport default useBalance;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport React from 'react';\n\ninterface Props {\n  balance?: string | null | undefined;\n  onClick?: () => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  balances: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 10px'\n  }\n}));\n\nconst Balance = ({ balance, onClick }: Props) => {\n  const classes = useStyles();\n  return (\n    <Container onClick={onClick} className={classes.balances}>\n      <p>{balance || '-'}</p>\n    </Container>\n  );\n};\n\nexport default Balance;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport default (item: string) => {\n  if (!item || item.length < 8) {\n    return item;\n  }\n\n  return `${item.substring(0, 6)}...${item.substring(item.length - 8)}`;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Identicon from '@polkadot/react-identicon';\nimport { INCORRECT_FORMAT } from '../constants';\nimport ctx from 'classnames';\nimport React from 'react';\ninterface Props {\n  address: string;\n  formatFound?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  placeholder: {\n    filter: 'grayscale(1)'\n  }\n}));\n\nexport default function AccountIdenticon({ address, formatFound }: Props) {\n  const placeholder = !address || formatFound === INCORRECT_FORMAT;\n\n  const value = !placeholder ? address : '1nUC7afqmo7zwRFWxDjrUQu9skk6fk99pafb4SiyGSRc8z3';\n\n  const classes = useStyles();\n\n  return <Identicon className={ctx(placeholder && classes.placeholder)} value={value} size={32} theme={'polkadot'} />;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport Balance from './Balance';\nimport shorterItem from '../util/shortenItem';\nimport AccountIdenticon from './AccountIdenticon';\n\ninterface Props {\n  addressKind?: 'companion' | 'native' | string;\n  address?: string;\n  friendlyName?: string | null;\n  hideAddress?: boolean;\n  onClick?: () => void;\n  balance?: string | null | undefined;\n}\n\nconst useStyles = makeStyles(() => ({\n  onlyBalance: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 10px'\n  },\n  icon: {\n    float: 'left'\n  },\n  container: {\n    display: 'flex',\n    minWidth: '100%',\n    padding: '0 10px',\n    alignItems: 'center'\n  },\n  address: {\n    marginLeft: '10px',\n    width: '100%'\n  },\n  balances: {\n    marginLeft: 'auto'\n  }\n}));\n\nconst AccountDisplay = ({ address = '', addressKind, balance, friendlyName, hideAddress = false, onClick }: Props) => {\n  const classes = useStyles();\n  const displayText = () => {\n    if (!address) {\n      return '';\n    }\n    const shortAddress = shorterItem(address);\n    const name = friendlyName ? `${friendlyName} [${shortAddress}]` : shortAddress;\n    const justFriendlyName = friendlyName || shortAddress;\n    const displayName = hideAddress ? justFriendlyName : name;\n\n    if (addressKind) {\n      return `${addressKind}(${displayName})`;\n    }\n\n    return name;\n  };\n\n  return (\n    <Container onClick={onClick} className={classes.container}>\n      <div className={classes.icon}>{address && <AccountIdenticon address={address} />}</div>\n      <div className={classes.address}>\n        <p>{displayText()}</p>\n      </div>\n      <Balance balance={balance} />\n    </Container>\n  );\n};\n\nexport default AccountDisplay;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\n\nimport useApiBalance from '../hooks/useApiBalance';\nimport useBalance from '../hooks/useBalance';\nimport AccountDisplay from './AccountDisplay';\n\ninterface Props {\n  accountName?: string;\n  chain?: string | undefined;\n  className?: string;\n  hideAddress?: boolean;\n  isDerived?: boolean;\n  onClick?: () => void;\n  value: string;\n}\n\nconst Account = ({ accountName, value, chain, hideAddress = false, isDerived = false }: Props) => {\n  const { api, address } = useApiBalance(value, chain, isDerived);\n\n  const state = useBalance(api, address, true);\n\n  return (\n    <AccountDisplay\n      friendlyName={accountName}\n      address={address}\n      balance={state.formattedBalance}\n      addressKind={isDerived ? 'companion' : undefined}\n      hideAddress={hideAddress}\n    />\n  );\n};\n\nexport default Account;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Container } from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Star } from '@material-ui/icons';\nimport React from 'react';\n\n// As this is placed as a child in the Material UI Select component, for some reason style components classes are not working.\n// This way to inject the styles works.\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      alignItems: 'center',\n      display: 'flex'\n    }\n  })\n);\n\nconst SubHeader = ({ chain }: any) => {\n  const classes = useStyles();\n\n  // TO-DO: replace Start icon with real chain icon.\n  return (\n    <Container key={chain} className={classes.root}>\n      <Star />\n      {chain}\n    </Container>\n  );\n};\n\nexport default SubHeader;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Container, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { encodeAddress } from '@polkadot/util-crypto';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useAccounts from '../hooks/useAccounts';\nimport useReceiver from '../hooks/useReceiver';\nimport { Account as AccountType } from '../types/accountTypes';\nimport formatAccounts from '../util/formatAccounts';\nimport getChainSS58 from '../util/getSS58';\nimport Account from './Account';\nimport AccountDisplay from './AccountDisplay';\nimport SubHeader from './SubHeader';\n\ninterface Props {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  row: {\n    minWidth: '100%',\n    margin: '10px 0'\n  }\n}));\n\nconst Sender = ({ className }: Props) => {\n  const classes = useStyles();\n  const [chains, setChains] = useState<Array<string[]>>([]);\n  const { account, accounts, derivedAccount, setCurrentAccount } = useAccounts();\n  const {\n    sourceChainDetails: { sourceChain },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n  const { setReceiver } = useReceiver();\n\n  useEffect(() => {\n    if (!chains.length) {\n      setChains([\n        [sourceChain, targetChain],\n        [targetChain, sourceChain]\n      ]);\n    }\n  }, [chains.length, sourceChain, targetChain]);\n\n  const value = account ? encodeAddress(account.address, getChainSS58(sourceChain)) : 'init';\n\n  const onChange = (value: string, chain: string) => {\n    setCurrentAccount(value, chain);\n    setReceiver(null);\n  };\n\n  const renderAccounts = (chains: string[]) => {\n    const [source, target] = chains;\n    const formatedAccounts = formatAccounts(accounts, source);\n    const items = formatedAccounts.map(({ text, value, key }: any) => (\n      <MenuItem\n        key={key}\n        value={value}\n        onClick={() => {\n          onChange(value, source);\n        }}\n      >\n        <div className={classes.row}>\n          <Account accountName={text} value={value} chain={source} />\n          <Account accountName={text} value={value} isDerived hideAddress chain={target} />\n        </div>\n      </MenuItem>\n    ));\n    return [<SubHeader key={source} chain={source} />, items];\n  };\n\n  const getName = (account: AccountType) => (account!.meta.name as string).toLocaleUpperCase();\n\n  const AccountSelected = () => {\n    if (account) {\n      const text = getName(account);\n      return <Account accountName={text} value={value} chain={sourceChain} />;\n    }\n    return <AccountDisplay friendlyName=\"Select sender account\" hideAddress />;\n  };\n\n  return (\n    <Container className={className}>\n      <InputLabel className=\"label\">{sourceChain} Account</InputLabel>\n      <div className=\"senderSelect\">\n        <FormControl className=\"formControl\">\n          <Select value={value} name=\"name\" renderValue={(): React.ReactNode => <AccountSelected />}>\n            {chains.map((chain) => renderAccounts(chain))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className=\"derivedAccount\">\n        {derivedAccount && (\n          <Account accountName={getName(account)} value={value} chain={targetChain} isDerived hideAddress />\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default styled(Sender)`\n  margin: 40px 0;\n  border: 1px solid;\n  border-radius: 5px;\n  width: 700px;\n  padding-left: 0;\n  .label {\n    padding: 5px;\n  }\n  .senderSelect {\n    min-height: 40px;\n    width: 700px;\n  }\n  .formControl {\n    min-height: 40px;\n    width: 700px;\n  }\n  .derivedAccount {\n    min-height: 40px;\n    padding: 10px;\n  }\n  .chainSelect {\n    font-size: 18px;\n    color: blue !important;\n  }\n`;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport { encodeAddress } from '@polkadot/util-crypto';\n\nimport getChainSS58 from '../util/getSS58';\n\nexport default function formatAccounts(accounts: Array<KeyringPair>, chain: string) {\n  // TO-DO: This function lacks the  capabillity to filter accounts that exist only on specific chains.\n  return accounts.map(({ meta, address }) => {\n    const ss58Format = getChainSS58(chain);\n    const formatedAddress = encodeAddress(address, ss58Format);\n    return {\n      icon: 'user',\n      key: formatedAddress,\n      text: (meta.name as string).toLocaleUpperCase(),\n      value: formatedAddress\n    };\n  });\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useMessageContext, useUpdateMessageContext } from '../contexts/MessageContext';\n\nconst CloseButton = styled.button`\n  display: inline-block;\n  color: white;\n  font-size: 1em;\n  background: transparent;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: none;\n  display: block;\n  outline: none;\n  font-weight: 600;\n`;\n\nexport default function SnackBar() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { message, variant } = useMessageContext();\n  const { dispatchMessage } = useUpdateMessageContext();\n\n  useEffect(() => {\n    if (message && variant) {\n      enqueueSnackbar(message, {\n        action: <CloseButton onClick={() => closeSnackbar()}>CLOSE</CloseButton>,\n        anchorOrigin: { horizontal: 'right', vertical: 'top' },\n        variant\n      });\n      dispatchMessage(MessageActionsCreators.clearMessage());\n    }\n  }, [closeSnackbar, message, variant, enqueueSnackbar, dispatchMessage]);\n\n  return null;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Codec } from '@polkadot/types/types';\nimport BN from 'bn.js';\nimport React, { useEffect, useState } from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDashboard from '../hooks/useDashboard';\nimport useLaneId from '../hooks/useLaneId';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { ChainDetails } from '../types/sourceTargetTypes';\nimport { TransanctionStatus } from '../types/transactionTypes';\nimport { Step, TransactionStatusEnum } from '../types/transactionTypes';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\nimport { TransactionDisplay } from './TransactionDisplay';\ninterface Props {\n  transaction: TransanctionStatus;\n  onComplete: () => void;\n}\n\nfunction TransactionStatus({ transaction, onComplete }: Props) {\n  const [nonceOfTargetFinalizedBlock, setNonceOfTargetFinalizedBlock] = useState<null | number>(null);\n  const [latestReceivedNonceRuntimeApi, setLatestReceivedNonceRuntimeApi] = useState(0);\n  const [steps, setSteps] = useState<Array<Step>>([]);\n\n  const {\n    sourceChainDetails: { sourceChain },\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi },\n      targetChain\n    }\n  } = useSourceTarget();\n  const laneId = useLaneId();\n  const areApiLoading = useLoadingApi();\n\n  const {\n    bestBlockFinalized,\n    outboundLanes: { latestReceivedNonce: latestReceivedNonceOnSource }\n  } = useDashboard(ChainDetails.SOURCE);\n  const {\n    bestBridgedFinalizedBlock: bestBridgedFinalizedBlockOnTarget,\n    bestBlockFinalized: bestBlockFinalizedOnTarget\n  } = useDashboard(ChainDetails.TARGET);\n  const { latestReceivedNonceMethodName } = getSubstrateDynamicNames(sourceChain);\n  const completed = transaction.status === TransactionStatusEnum.COMPLETED;\n\n  useEffect(() => {\n    if (!areApiLoading || !transaction) {\n      return;\n    }\n    const getNonceByHash = async () => {\n      const blockHash = await targetApi.rpc.chain.getBlockHash(bestBlockFinalizedOnTarget);\n      const latestReceivedNonceCall = await targetApi.rpc.state.call<Codec>(\n        latestReceivedNonceMethodName,\n        laneId,\n        blockHash.toJSON()\n      );\n\n      // @ts-ignore\n      const latestReceivedNonceCallType = targetApi.registry.createType('MessageNonce', latestReceivedNonceCall);\n      const latestReceivedNonce = latestReceivedNonceCallType.toString();\n      setNonceOfTargetFinalizedBlock(parseInt(latestReceivedNonce));\n    };\n\n    const getLatestReceivedNonce = async () => {\n      const latestReceivedNonceCall = await targetApi.rpc.state.call<Codec>(latestReceivedNonceMethodName, laneId);\n      // @ts-ignore\n      const latestReceivedNonceCallType = targetApi.registry.createType('MessageNonce', latestReceivedNonceCall);\n      setLatestReceivedNonceRuntimeApi(parseInt(latestReceivedNonceCallType.toString()));\n    };\n\n    getNonceByHash();\n    getLatestReceivedNonce();\n  }, [\n    areApiLoading,\n    bestBlockFinalizedOnTarget,\n    transaction,\n    laneId,\n    latestReceivedNonceMethodName,\n    targetApi.registry,\n    targetApi.rpc.chain,\n    targetApi.rpc.state\n  ]);\n\n  useEffect(() => {\n    if (!areApiLoading || !transaction || completed) {\n      return;\n    }\n\n    const stepEvaluator = (transactionValue: string | number | null, chainValue: string | number | null) => {\n      if (!transactionValue || !chainValue) return false;\n\n      const bnChainValue = new BN(chainValue);\n      const bnTransactionValue = new BN(transactionValue);\n      return bnChainValue.gt(bnTransactionValue);\n    };\n\n    const completionStatus = (status: boolean) =>\n      transaction.block && status ? TransactionStatusEnum.COMPLETED : TransactionStatusEnum.IN_PROGRESS;\n\n    const sourceTransactionFinalized = stepEvaluator(transaction.block, bestBlockFinalized);\n    const blockFinalityRelayed = stepEvaluator(transaction.block, bestBridgedFinalizedBlockOnTarget);\n    const messageDelivered = stepEvaluator(transaction.messageNonce, latestReceivedNonceRuntimeApi);\n    const messageFinalizedOnTarget = stepEvaluator(transaction.messageNonce, nonceOfTargetFinalizedBlock);\n    const sourceConfirmationReceived = stepEvaluator(transaction.messageNonce, latestReceivedNonceOnSource);\n\n    const steps = [\n      {\n        chainType: sourceChain,\n        label: 'Include message in block',\n        onChain: transaction.block,\n        status: transaction.block ? TransactionStatusEnum.COMPLETED : TransactionStatusEnum.IN_PROGRESS\n      },\n      {\n        chainType: sourceChain,\n        label: 'Finalize block',\n        status: completionStatus(sourceTransactionFinalized)\n      },\n      {\n        chainType: targetChain,\n        label: 'Relay block',\n        status: completionStatus(blockFinalityRelayed)\n      },\n      {\n        chainType: targetChain,\n        label: 'Deliver message',\n        onChain: transaction.messageNonce,\n        status: completionStatus(messageDelivered)\n      },\n      {\n        chainType: targetChain,\n        label: 'Finalize message in target block',\n        // TODO [#113] We should remember the first block that caused the evaluator to go brrr.\n        onChain:\n          completionStatus(messageFinalizedOnTarget) === TransactionStatusEnum.COMPLETED && bestBlockFinalizedOnTarget,\n        status: completionStatus(messageFinalizedOnTarget)\n      },\n      {\n        chainType: sourceChain,\n        label: 'Confirm delivery',\n        status: completionStatus(sourceConfirmationReceived)\n      }\n    ];\n\n    if (sourceConfirmationReceived) {\n      onComplete();\n    }\n\n    setSteps(steps);\n  }, [\n    areApiLoading,\n    bestBlockFinalized,\n    bestBlockFinalizedOnTarget,\n    bestBridgedFinalizedBlockOnTarget,\n    completed,\n    latestReceivedNonceOnSource,\n    latestReceivedNonceRuntimeApi,\n    nonceOfTargetFinalizedBlock,\n    onComplete,\n    sourceChain,\n    targetChain,\n    transaction\n  ]);\n\n  return <TransactionDisplay steps={steps} transaction={transaction} />;\n}\n\nexport default TransactionStatus;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport { TransactionStatusEnum, TransanctionStatus } from '../types/transactionTypes';\nimport shortenItem from '../util/shortenItem';\nimport TransactionStatus from './TransactionStatus';\n\nconst Transactions = () => {\n  const { transactions } = useTransactionContext();\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const { dispatchMessage } = useUpdateMessageContext();\n  if (!transactions) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2>{`${transactions.length ? 'Transactions' : ''}`}</h2>\n      {transactions.map((transaction: TransanctionStatus) => {\n        const onComplete = () => {\n          dispatchTransaction(\n            TransactionActionCreators.updateTransactionStatus(\n              { status: TransactionStatusEnum.COMPLETED },\n              transaction.id\n            )\n          );\n          dispatchMessage(\n            MessageActionsCreators.triggerSuccessMessage({\n              message: `Transaction: ${shortenItem(transaction.blockHash)} is completed`\n            })\n          );\n        };\n        return <TransactionStatus key={transaction.id} transaction={transaction} onComplete={onComplete} />;\n      })}\n    </>\n  );\n};\n\nexport default Transactions;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Container, InputBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { INCORRECT_FORMAT, GENERIC } from '../constants';\nimport { TransactionActionCreators } from '../actions/transactionActions';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext, useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useApiBalance from '../hooks/useApiBalance';\nimport useBalance from '../hooks/useBalance';\nimport usePrevious from '../hooks/usePrevious';\n\nimport useReceiver from '../hooks/useReceiver';\nimport AccountIdenticon from './AccountIdenticon';\n\ninterface Props {\n  setError: (value: string) => void;\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    padding: '0',\n    float: 'left'\n  },\n  row: {\n    border: '1px solid grey',\n    borderRadius: '5px 5px 0 0',\n    display: 'flex',\n    padding: '10px 20px',\n    alignItems: 'center'\n  },\n  address: {\n    marginLeft: '10px'\n  },\n  balance: {\n    marginLeft: 'auto'\n  },\n  input: {\n    marginLeft: '10px',\n    width: '80%'\n  }\n}));\n\nfunction ReceiverInput({ setError }: Props) {\n  const classes = useStyles();\n  const [formatFound, setFormatFound] = useState('');\n  const [showBalance, setShowBalance] = useState(false);\n\n  const { setReceiver, setUnformattedReceiver, validateAccount } = useReceiver();\n\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const { receiverAddress, unformattedReceiverAddress } = useTransactionContext();\n\n  const { api, address } = useApiBalance(unformattedReceiverAddress, formatFound, false);\n\n  const state = useBalance(api, address, true);\n\n  const {\n    targetChainDetails: { targetChain },\n    sourceChainDetails: { sourceChain }\n  } = useSourceTarget();\n  const prevTargetChain = usePrevious(targetChain);\n\n  const reset = useCallback(() => {\n    dispatchTransaction(TransactionActionCreators.setGenericAccount(null));\n    dispatchTransaction(TransactionActionCreators.setDerivedAccount(null));\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(null));\n    setShowBalance(false);\n    setError('');\n  }, [dispatchTransaction, setError]);\n\n  useEffect(() => {\n    if (prevTargetChain !== targetChain) {\n      reset();\n      setUnformattedReceiver('');\n    }\n  }, [unformattedReceiverAddress, setUnformattedReceiver, prevTargetChain, receiverAddress, reset, targetChain]);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const receiver = event.target.value;\n    reset();\n    setUnformattedReceiver(receiver);\n    if (!receiver) {\n      return;\n    }\n\n    const { formattedAccount, formatFound } = validateAccount(receiver)!;\n    setFormatFound(formatFound);\n    if (formatFound === INCORRECT_FORMAT) {\n      setError('Invalid address.');\n      return;\n    }\n\n    if (formatFound === GENERIC) {\n      dispatchTransaction(TransactionActionCreators.setGenericAccount(receiver));\n      return;\n    }\n\n    if (formatFound === targetChain) {\n      setReceiver(formattedAccount);\n      setShowBalance(true);\n      return;\n    }\n\n    if (formatFound === sourceChain) {\n      dispatchTransaction(TransactionActionCreators.setDerivedAccount(formattedAccount));\n      setReceiver(receiver);\n      return;\n    }\n\n    setError(`Unsupported address SS58 prefix: ${formatFound}`);\n  };\n\n  const addressInput = unformattedReceiverAddress || '';\n  return (\n    <Container className={classes.container}>\n      <div className={classes.row}>\n        <AccountIdenticon address={addressInput} formatFound={formatFound} />\n        <div className={classes.input}>\n          <InputBase fullWidth onChange={onChange} value={addressInput} placeholder=\"recipient address\" />\n        </div>\n        <div className={classes.balance}>\n          <p>{showBalance && state && state.formattedBalance}</p>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default ReceiverInput;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value: any) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport Container from '@material-ui/core/Container';\nimport { encodeAddress } from '@polkadot/util-crypto';\nimport React, { useState } from 'react';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { getChainConfigs } from '../configs/substrateProviders';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useBalance from '../hooks/useBalance';\nimport getDeriveAccount from '../util/getDeriveAccount';\nimport shorterItem from '../util/shortenItem';\nimport AccountDisplay from './AccountDisplay';\n\ninterface Props {\n  value: string;\n  isDerived?: boolean;\n}\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    padding: '0',\n    float: 'left'\n  },\n  native: {\n    border: '1px solid',\n    borderTop: 'none',\n    padding: '5px 0'\n  },\n  companion: {\n    border: '1px solid',\n    borderTop: 'none',\n    borderRadius: '0 0 5px 5px',\n    padding: '5px 0'\n  }\n}));\n\nconst NATIVE = 'NATIVE';\nconst DERIVED = 'DERIVED';\n\nconst GenericAccount = ({ value }: Props) => {\n  const [selected, setSelected] = useState('');\n  const classes = useStyles();\n  const {\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi },\n      targetChain\n    },\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi },\n      sourceChain\n    }\n  } = useSourceTarget();\n\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const chainsConfigs = getChainConfigs();\n  const { bridgeId } = chainsConfigs[sourceChain];\n  const { SS58Format: targetSS58Format } = chainsConfigs[targetChain];\n\n  const nativeAddress = encodeAddress(value, targetSS58Format);\n  const nativeState = useBalance(sourceApi, nativeAddress, true);\n\n  const derivedAddress = getDeriveAccount({\n    SS58Format: targetSS58Format,\n    address: value,\n    bridgeId\n  });\n  const derivedState = useBalance(targetApi, derivedAddress, true);\n\n  const setNativeAsTarget = () => {\n    setSelected(NATIVE);\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(nativeAddress));\n  };\n\n  const setCompanionAsTarget = () => {\n    setSelected(DERIVED);\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(derivedAddress));\n  };\n\n  const shortGenericAddress = shorterItem(value);\n  return (\n    <Container className={classes.container}>\n      {(!selected || selected === NATIVE) && (\n        <div className={classes.native} onClick={setNativeAsTarget}>\n          <AccountDisplay\n            address={nativeAddress}\n            addressKind=\"native\"\n            balance={nativeState.formattedBalance}\n            friendlyName={shortGenericAddress}\n            hideAddress\n          />\n        </div>\n      )}\n      {(!selected || selected === DERIVED) && (\n        <div className={classes.companion} onClick={setCompanionAsTarget}>\n          <AccountDisplay\n            address={derivedAddress}\n            addressKind=\"companion\"\n            balance={derivedState.formattedBalance}\n            friendlyName={shortGenericAddress}\n            hideAddress\n          />\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default GenericAccount;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport Account from './Account';\nimport AccountDisplay from './AccountDisplay';\nimport GenericAccount from './GenericAccount';\nimport shortenItem from '../util/shortenItem';\n\nconst useStyles = makeStyles(() => ({\n  derived: {\n    padding: '10px',\n    minHeight: '50px',\n    minWidth: '100%',\n    border: '1px solid grey',\n    borderRadius: '0 0 5px 5px',\n    borderTop: 'none'\n  }\n}));\n\nconst ReceiverDerivedAccount = () => {\n  const classes = useStyles();\n  const {\n    genericReceiverAccount,\n    derivedReceiverAccount,\n    receiverAddress,\n    unformattedReceiverAddress\n  } = useTransactionContext();\n\n  const {\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n\n  if (genericReceiverAccount) {\n    return <GenericAccount value={genericReceiverAccount} />;\n  }\n\n  if (derivedReceiverAccount) {\n    const shortUnformattedReceiver = shortenItem(unformattedReceiverAddress || '');\n    return (\n      <div className={classes.derived}>\n        <Account\n          accountName={shortUnformattedReceiver}\n          value={receiverAddress!}\n          chain={targetChain}\n          isDerived\n          hideAddress\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.derived}>\n      <AccountDisplay addressKind=\"companion\" />\n    </div>\n  );\n};\n\nexport default ReceiverDerivedAccount;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Container } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReceiverInput from './ReceiverInput';\nimport ReceiverDerivedAccount from './ReceiverDerivedAccount';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    minWidth: '100%',\n    padding: '0',\n    marginBottom: '20px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  input: {\n    minWidth: '100%'\n  }\n}));\n\nconst Receiver = () => {\n  const [error, setError] = useState('');\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <div className={classes.input}>\n        <ReceiverInput setError={setError} />\n      </div>\n      <ReceiverDerivedAccount />\n      <div>\n        <p>{error}</p>\n      </div>\n    </Container>\n  );\n};\n\nexport default Receiver;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button, Container, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useSendMessage from '../hooks/useSendMessage';\nimport { TransactionTypes } from '../types/transactionTypes';\n\nimport Receiver from './Receiver';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: '700px',\n    marginLeft: '0',\n    padding: '0'\n  }\n}));\n\nconst Transfer = () => {\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = useState(false);\n  const [transferInput, setTransferInput] = useState('0');\n\n  const areApiReady = useLoadingApi();\n\n  const { estimatedFee, receiverAddress } = useTransactionContext();\n\n  const { isButtonDisabled, sendLaneMessage } = useSendMessage({\n    input: transferInput,\n    isRunning,\n    setIsRunning,\n    type: TransactionTypes.TRANSFER\n  });\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTransferInput(event.target.value);\n  };\n\n  if (!areApiReady) {\n    return null;\n  }\n\n  return (\n    <Container className={classes.container}>\n      <h2>Transfer</h2>\n\n      <Receiver />\n\n      <TextField onChange={onChange} value={transferInput} label=\"Amount\" variant=\"outlined\" />\n\n      <div>\n        <Button variant=\"contained\" disabled={isButtonDisabled()} onClick={sendLaneMessage}>\n          Send Bridge Message\n        </Button>\n      </div>\n\n      <p>{receiverAddress && estimatedFee && `Estimated source Fee: ${estimatedFee}`}</p>\n    </Container>\n  );\n};\n\nexport default Transfer;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport { BoxSidebar, BoxUI, ButtonExt, MenuAction, NetworkSides, NetworkStats } from '../components';\nimport CustomCall from '../components/CustomCall';\nimport DashboardCard from '../components/DashboardCard';\nimport ExtensionAccountCheck from '../components/ExtensionAccountCheck';\nimport Remark from '../components/Remark';\nimport Sender from '../components/Sender';\nimport SnackBar from '../components/SnackBar';\nimport Transactions from '../components/Transactions';\nimport Transfer from '../components/Transfer';\nimport { ChainDetails } from '../types/sourceTargetTypes';\n\ninterface MenuActionItemsProps {\n  idx: number;\n  title: string;\n  isEnabled: boolean;\n  component: React.ReactElement;\n}\n\nconst MenuContents = [\n  {\n    idx: 0,\n    title: 'Transfer',\n    isEnabled: true,\n    component: <Transfer />\n  },\n  {\n    idx: 1,\n    title: 'Remark',\n    isEnabled: true,\n    component: <Remark />\n  },\n  {\n    idx: 2,\n    title: 'Custom Call',\n    isEnabled: true,\n    component: <CustomCall />\n  },\n  {\n    idx: 3,\n    title: 'Connect to a wallet',\n    isEnabled: true,\n    component: <p>Connect to a wallet</p>\n  }\n];\n\nfunction Main() {\n  const [items, setItems] = React.useState<MenuActionItemsProps[]>([] as MenuActionItemsProps[]);\n  const [index, setIndex] = React.useState<number>(0);\n\n  const searchItems = (choice: number) => items.find((x) => x.idx === choice);\n\n  React.useEffect(() => {\n    setItems(MenuContents);\n  }, []);\n  return (\n    <>\n      <BoxSidebar>\n        <div>\n          <Typography variant=\"button\">Bridges UI</Typography>\n          <NetworkSides />\n          <NetworkStats />\n        </div>\n        <ButtonExt> Help & Feedback </ButtonExt>\n      </BoxSidebar>\n      <BoxUI>\n        <MenuAction items={items} menuIdx={index} changeMenu={setIndex} />\n        <Container>\n          <Grid container>\n            <Grid item md={12}>\n              <ExtensionAccountCheck component={<Sender />} />\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item md={12}>\n              {searchItems(index)?.component}\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item md={12}>\n              <Transactions />\n            </Grid>\n          </Grid>\n        </Container>\n        <SnackBar />\n        <br />\n        <br />\n        <Grid container alignItems=\"center\">\n          <Grid item md={5}>\n            <DashboardCard chainDetail={ChainDetails.SOURCE} />\n          </Grid>\n          <Grid item md={5}>\n            <DashboardCard chainDetail={ChainDetails.TARGET} />\n          </Grid>\n        </Grid>\n      </BoxUI>\n    </>\n  );\n}\n\nexport default Main;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Backdrop, CircularProgress, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { light } from './components';\nimport { CHAIN_1, CHAIN_2, getChainProviders } from './configs/substrateProviders';\nimport { AccountContextProvider } from './contexts/AccountContextProvider';\nimport { KeyringContextProvider } from './contexts/KeyringContextProvider';\nimport { MessageContextProvider } from './contexts/MessageContext';\nimport { SourceTargetContextProvider } from './contexts/SourceTargetContextProvider';\nimport { TransactionContextProvider } from './contexts/TransactionContext';\nimport { useApiConnection } from './hooks/useApiConnection';\nimport Main from './screens/Main';\n\nconst providers = getChainProviders();\n\nfunction App() {\n  const apiChain1 = useApiConnection({ ...providers[CHAIN_1], chain: CHAIN_1 });\n  const apiChain2 = useApiConnection({ ...providers[CHAIN_2], chain: CHAIN_2 });\n  const connections = [\n    { apiConnection: apiChain1, chainName: CHAIN_1, polkadotjsUrl: providers[CHAIN_1].polkadotjsUrl },\n    { apiConnection: apiChain2, chainName: CHAIN_2, polkadotjsUrl: providers[CHAIN_2].polkadotjsUrl }\n  ];\n\n  const apiReady = apiChain1.isApiReady && apiChain2.isApiReady;\n\n  if (!apiReady) {\n    return (\n      <Backdrop open>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    );\n  }\n\n  return (\n    <SourceTargetContextProvider connections={connections}>\n      <MessageContextProvider>\n        <SnackbarProvider>\n          <KeyringContextProvider>\n            <AccountContextProvider>\n              <TransactionContextProvider>\n                <BrowserRouter>\n                  <Switch>\n                    <Route path={'/'}>\n                      <ThemeProvider theme={createMuiTheme(light)}>\n                        <Main />\n                      </ThemeProvider>\n                    </Route>\n                  </Switch>\n                </BrowserRouter>\n              </TransactionContextProvider>\n            </AccountContextProvider>\n          </KeyringContextProvider>\n        </SnackbarProvider>\n      </MessageContextProvider>\n    </SourceTargetContextProvider>\n  );\n}\n\nexport default App;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { checkExpectedVariables } from './util/envVariablesValidations';\n\ncheckExpectedVariables();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}